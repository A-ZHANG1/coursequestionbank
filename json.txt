# Logfile created on 2016-11-16 14:55:06 -0800 by logger.rb/53141
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"76c8db3e-fdfe-4be4-98b8-8fcdde743928", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "uid"=>"aaa7df9c-828b-4787-9757-d4a5ce780288", "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will raise an exception and grind to a halt", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will continue, and the messages will go into the log file", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"The SaaS gods will strike you down in a fit of rage", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"76c8db3e-fdfe-4be4-98b8-8fcdde743928", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "uid"=>"aaa7df9c-828b-4787-9757-d4a5ce780288", "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4f802f71-6019-49e5-8d7d-c69c2d987125", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4f802f71-6019-49e5-8d7d-c69c2d987125", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"150cfa0b-2fab-422b-8820-dd14412caedd", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"150cfa0b-2fab-422b-8820-dd14412caedd", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"150cfa0b-2fab-422b-8820-dd14412caedd", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8173db6-4f93-4a21-ab92-ae0cd1ddfb8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8173db6-4f93-4a21-ab92-ae0cd1ddfb8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8173db6-4f93-4a21-ab92-ae0cd1ddfb8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c090700f-32d7-4942-a418-30e977769c16", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ebbf189d-be32-46ef-93ef-a7efb6dfb2c2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ebbf189d-be32-46ef-93ef-a7efb6dfb2c2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ebbf189d-be32-46ef-93ef-a7efb6dfb2c2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"599ce3f3-9c4d-4be0-a0c3-031c83500a83", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"599ce3f3-9c4d-4be0-a0c3-031c83500a83", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4579fd27-2db8-4edf-af5a-bf5c5ad3cf3d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8973221c-9def-4033-98c6-cc7f06a662df", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8973221c-9def-4033-98c6-cc7f06a662df", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6734bda0-514d-499a-962a-5089ec72b30a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"66f139c2-ae9b-4106-aa16-b7a05efd2d46", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61064f71-0af4-4fbb-a69a-e5616b3014a1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61064f71-0af4-4fbb-a69a-e5616b3014a1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e815da3f-3bdf-4e67-b1d2-58d929741763", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d0c3a11b-6e89-44f2-a9fe-a370cbe97a81", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"743edd6a-d583-43d2-9956-82e7aa5b33fd", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"150cfa0b-2fab-422b-8820-dd14412caedd", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8173db6-4f93-4a21-ab92-ae0cd1ddfb8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c090700f-32d7-4942-a418-30e977769c16", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ebbf189d-be32-46ef-93ef-a7efb6dfb2c2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"599ce3f3-9c4d-4be0-a0c3-031c83500a83", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4579fd27-2db8-4edf-af5a-bf5c5ad3cf3d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8973221c-9def-4033-98c6-cc7f06a662df", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6734bda0-514d-499a-962a-5089ec72b30a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"66f139c2-ae9b-4106-aa16-b7a05efd2d46", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61064f71-0af4-4fbb-a69a-e5616b3014a1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e815da3f-3bdf-4e67-b1d2-58d929741763", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d0c3a11b-6e89-44f2-a9fe-a370cbe97a81", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"743edd6a-d583-43d2-9956-82e7aa5b33fd", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"78d64421-1dc7-4827-b98f-6529ee503ae0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"78d64421-1dc7-4827-b98f-6529ee503ae0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"78d64421-1dc7-4827-b98f-6529ee503ae0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3738da3-12e2-47b4-aa54-14b28620b0ad", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3738da3-12e2-47b4-aa54-14b28620b0ad", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3738da3-12e2-47b4-aa54-14b28620b0ad", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e197b16-d53a-4b08-8130-16fa243ea073", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"506d7351-a9d1-4886-971a-3efe350596f2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"506d7351-a9d1-4886-971a-3efe350596f2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"506d7351-a9d1-4886-971a-3efe350596f2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eeda91be-3073-499f-a28e-99299644249f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eeda91be-3073-499f-a28e-99299644249f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a59b3c67-cb03-443d-9b4b-fc7803fc34eb", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"46b59989-68e2-45e5-be1e-62bda2172a54", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"46b59989-68e2-45e5-be1e-62bda2172a54", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f4c0bd66-55bd-434b-baab-e175bd598fe1", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d9614b64-d6b6-421a-8ae5-c85066fe3d6b", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"36648868-a49b-4e7b-b501-4a40eb8a5b2a", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"36648868-a49b-4e7b-b501-4a40eb8a5b2a", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f07e292f-3296-4da7-9912-d4a2a64b8b35", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c80f2d70-a412-4147-8bb1-5931ac181d70", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3726febc-3ce9-4e3d-b635-f61aaf65a35b", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"78d64421-1dc7-4827-b98f-6529ee503ae0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3738da3-12e2-47b4-aa54-14b28620b0ad", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e197b16-d53a-4b08-8130-16fa243ea073", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"506d7351-a9d1-4886-971a-3efe350596f2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eeda91be-3073-499f-a28e-99299644249f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a59b3c67-cb03-443d-9b4b-fc7803fc34eb", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"46b59989-68e2-45e5-be1e-62bda2172a54", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f4c0bd66-55bd-434b-baab-e175bd598fe1", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d9614b64-d6b6-421a-8ae5-c85066fe3d6b", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"36648868-a49b-4e7b-b501-4a40eb8a5b2a", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f07e292f-3296-4da7-9912-d4a2a64b8b35", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c80f2d70-a412-4147-8bb1-5931ac181d70", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3726febc-3ce9-4e3d-b635-f61aaf65a35b", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8804d07e-ceb4-4013-8413-a106cf908b61", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8804d07e-ceb4-4013-8413-a106cf908b61", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8804d07e-ceb4-4013-8413-a106cf908b61", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0571bf89-e8fc-4de3-ab05-8222a4f418a9", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0571bf89-e8fc-4de3-ab05-8222a4f418a9", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0571bf89-e8fc-4de3-ab05-8222a4f418a9", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fdc6aca3-6e29-46a1-bc26-a191e286609f", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f5f5ec19-fe92-46d3-991a-2d520c146060", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f5f5ec19-fe92-46d3-991a-2d520c146060", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f5f5ec19-fe92-46d3-991a-2d520c146060", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"09dc471e-9cc5-4b69-ad46-1e8a70054f81", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"09dc471e-9cc5-4b69-ad46-1e8a70054f81", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"98a7962d-b64b-4a07-8dd7-8a65b29075c1", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4417c5bd-4666-40d4-ba03-b704d5d3818e", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4417c5bd-4666-40d4-ba03-b704d5d3818e", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad43d92d-a621-45fc-8547-bf46c5240d1a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6d48d694-8915-473d-99ae-b7a0af2bda93", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c679b39b-7458-4298-b2fa-c68d0b6ec2f0", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c679b39b-7458-4298-b2fa-c68d0b6ec2f0", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fbb192a6-f040-4a6d-8468-95e6233bfba1", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"15e870b9-3f3a-4ddb-be9a-8b78cebf23e7", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"302b5b09-97d5-41aa-a842-0905b92877b3", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8804d07e-ceb4-4013-8413-a106cf908b61", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0571bf89-e8fc-4de3-ab05-8222a4f418a9", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fdc6aca3-6e29-46a1-bc26-a191e286609f", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f5f5ec19-fe92-46d3-991a-2d520c146060", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"09dc471e-9cc5-4b69-ad46-1e8a70054f81", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"98a7962d-b64b-4a07-8dd7-8a65b29075c1", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4417c5bd-4666-40d4-ba03-b704d5d3818e", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad43d92d-a621-45fc-8547-bf46c5240d1a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6d48d694-8915-473d-99ae-b7a0af2bda93", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c679b39b-7458-4298-b2fa-c68d0b6ec2f0", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fbb192a6-f040-4a6d-8468-95e6233bfba1", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"15e870b9-3f3a-4ddb-be9a-8b78cebf23e7", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"302b5b09-97d5-41aa-a842-0905b92877b3", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7e095e8-07ae-4dab-a046-f5e314fc3a79", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7e095e8-07ae-4dab-a046-f5e314fc3a79", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7e095e8-07ae-4dab-a046-f5e314fc3a79", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0a1303c8-2b01-4f74-a129-72e4925ca48b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0a1303c8-2b01-4f74-a129-72e4925ca48b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0a1303c8-2b01-4f74-a129-72e4925ca48b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f2b45891-db30-4f52-9f3b-8d7100676b8e", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ee140502-2b23-48e9-b386-49e6797fdae2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ee140502-2b23-48e9-b386-49e6797fdae2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ee140502-2b23-48e9-b386-49e6797fdae2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce654f82-2b3c-4b01-bce5-3aaf95dea475", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce654f82-2b3c-4b01-bce5-3aaf95dea475", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be7c9240-6a20-467e-ae27-69cd91c8211c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c60e8cef-58f3-46d9-8441-8f3cbcc0e6cb", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c60e8cef-58f3-46d9-8441-8f3cbcc0e6cb", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"74725b44-57d4-4692-9aed-0a15af1ca83d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8a82db8a-f87c-40e9-a552-20cbce0887e7", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"184f35f2-1faf-49f6-bf05-43bfcdc795df", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"184f35f2-1faf-49f6-bf05-43bfcdc795df", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"31fd0f62-17a4-444d-aedb-d67c9f3db71c", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8bcba67b-fcc7-4f9e-9fb0-e4e8f533dbe3", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c9291f12-f7f7-42ac-b030-ff9796246230", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7e095e8-07ae-4dab-a046-f5e314fc3a79", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0a1303c8-2b01-4f74-a129-72e4925ca48b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f2b45891-db30-4f52-9f3b-8d7100676b8e", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ee140502-2b23-48e9-b386-49e6797fdae2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce654f82-2b3c-4b01-bce5-3aaf95dea475", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be7c9240-6a20-467e-ae27-69cd91c8211c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c60e8cef-58f3-46d9-8441-8f3cbcc0e6cb", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"74725b44-57d4-4692-9aed-0a15af1ca83d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8a82db8a-f87c-40e9-a552-20cbce0887e7", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"184f35f2-1faf-49f6-bf05-43bfcdc795df", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"31fd0f62-17a4-444d-aedb-d67c9f3db71c", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8bcba67b-fcc7-4f9e-9fb0-e4e8f533dbe3", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c9291f12-f7f7-42ac-b030-ff9796246230", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0d55a319-6131-4646-952d-87ad95cf6d40", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0d55a319-6131-4646-952d-87ad95cf6d40", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0d55a319-6131-4646-952d-87ad95cf6d40", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d998f6c-dd28-4c76-8609-79c0e9a961a0", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d998f6c-dd28-4c76-8609-79c0e9a961a0", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d998f6c-dd28-4c76-8609-79c0e9a961a0", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"cb457a8e-b0ed-4f2c-934e-339963a90138", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b7320922-9645-487e-a180-8158bfb5077d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b7320922-9645-487e-a180-8158bfb5077d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b7320922-9645-487e-a180-8158bfb5077d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d6a85c26-e615-48b5-b6d0-e043a28be56f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d6a85c26-e615-48b5-b6d0-e043a28be56f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8917cbd-0e7a-43f2-8e2a-3a711660d7f5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"21e5a23c-c2c9-4f8b-a3e7-f75d95f9c8c7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"21e5a23c-c2c9-4f8b-a3e7-f75d95f9c8c7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"17d61d69-b60e-43c3-a846-ef8bf6d35d94", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dd719743-034b-43f1-acc4-5072151e518c", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"abc0c70d-d157-468e-b453-f6169c83be3b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"abc0c70d-d157-468e-b453-f6169c83be3b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"72fe1c12-75ea-4ac7-a1c0-3a81cf04a4a5", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4b1ff3ca-0ad4-403e-96d3-9b440242d44b", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e0af2838-38c5-405f-b764-a2e351f0d5e4", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0d55a319-6131-4646-952d-87ad95cf6d40", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d998f6c-dd28-4c76-8609-79c0e9a961a0", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"cb457a8e-b0ed-4f2c-934e-339963a90138", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b7320922-9645-487e-a180-8158bfb5077d", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d6a85c26-e615-48b5-b6d0-e043a28be56f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8917cbd-0e7a-43f2-8e2a-3a711660d7f5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"21e5a23c-c2c9-4f8b-a3e7-f75d95f9c8c7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"17d61d69-b60e-43c3-a846-ef8bf6d35d94", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dd719743-034b-43f1-acc4-5072151e518c", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"abc0c70d-d157-468e-b453-f6169c83be3b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"72fe1c12-75ea-4ac7-a1c0-3a81cf04a4a5", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4b1ff3ca-0ad4-403e-96d3-9b440242d44b", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e0af2838-38c5-405f-b764-a2e351f0d5e4", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89c9c30e-3642-43ec-8db1-4e323cc72b1b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89c9c30e-3642-43ec-8db1-4e323cc72b1b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"96310b7e-3c91-4887-8461-a75d7d93bc21", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"96310b7e-3c91-4887-8461-a75d7d93bc21", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"11b4e92a-5314-4901-ac58-12ca7822988e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"11b4e92a-5314-4901-ac58-12ca7822988e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"84fa50fc-6a3c-4ebc-acc2-6e3d7c5aa29a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"84fa50fc-6a3c-4ebc-acc2-6e3d7c5aa29a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ec1c924-c477-46fc-8a6b-3651565a647e", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ec1c924-c477-46fc-8a6b-3651565a647e", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ec1c924-c477-46fc-8a6b-3651565a647e", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7f3d2091-4d50-4770-b95d-eac45e424cc7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7f3d2091-4d50-4770-b95d-eac45e424cc7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7f3d2091-4d50-4770-b95d-eac45e424cc7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fc2d7893-c14b-4d78-a65a-66c9e54fc7f7", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0efc987c-c455-4697-8f79-865e27b3bb55", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0efc987c-c455-4697-8f79-865e27b3bb55", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0efc987c-c455-4697-8f79-865e27b3bb55", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2e9e1b2a-dc61-4ebd-9422-23c9fecdef66", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2e9e1b2a-dc61-4ebd-9422-23c9fecdef66", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"188c6114-80a6-4c5d-bde3-6b4ae8f2012e", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"790ffcc2-63c0-4a2f-81b7-33e6bc97e669", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"790ffcc2-63c0-4a2f-81b7-33e6bc97e669", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"50ff1f9a-c6bb-4aee-bbff-588bf8788dd0", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"86981fe6-4f52-497e-ac00-046a12d68ac6", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3d59e27b-545c-40a2-9782-766cbaa7e369", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3d59e27b-545c-40a2-9782-766cbaa7e369", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dde68aa1-6336-4528-ad98-ec306ba387db", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d828388e-6420-47ac-b445-5865643196e8", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4fc959d9-6740-4883-8950-19feeff21c8d", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ec1c924-c477-46fc-8a6b-3651565a647e", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7f3d2091-4d50-4770-b95d-eac45e424cc7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fc2d7893-c14b-4d78-a65a-66c9e54fc7f7", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0efc987c-c455-4697-8f79-865e27b3bb55", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2e9e1b2a-dc61-4ebd-9422-23c9fecdef66", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"188c6114-80a6-4c5d-bde3-6b4ae8f2012e", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"790ffcc2-63c0-4a2f-81b7-33e6bc97e669", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"50ff1f9a-c6bb-4aee-bbff-588bf8788dd0", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"86981fe6-4f52-497e-ac00-046a12d68ac6", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3d59e27b-545c-40a2-9782-766cbaa7e369", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dde68aa1-6336-4528-ad98-ec306ba387db", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d828388e-6420-47ac-b445-5865643196e8", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4fc959d9-6740-4883-8950-19feeff21c8d", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19507dc9-c666-4aee-8724-726c45e9eae3", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19507dc9-c666-4aee-8724-726c45e9eae3", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19507dc9-c666-4aee-8724-726c45e9eae3", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ac48e6c-6308-4266-8f74-726a728b7c5c", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ac48e6c-6308-4266-8f74-726a728b7c5c", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ac48e6c-6308-4266-8f74-726a728b7c5c", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3ed57791-0e91-4ce8-98ab-7faca829a21e", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d556540-417e-41c0-8266-d27514c67835", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d556540-417e-41c0-8266-d27514c67835", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d556540-417e-41c0-8266-d27514c67835", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce1d045d-9eba-4f04-8b83-9e92179b032f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce1d045d-9eba-4f04-8b83-9e92179b032f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b114b96c-6c29-49e0-9943-284619e0e237", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"258f809b-2a4c-47e5-b4bb-76191c23df6c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"258f809b-2a4c-47e5-b4bb-76191c23df6c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2bd4a99d-db64-4b07-8e7d-6c2b5f7dce6d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0f775390-2f95-49f1-b836-7544e5c553c9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5d602ada-4479-41f9-adcf-dbb591a02f78", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5d602ada-4479-41f9-adcf-dbb591a02f78", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e7356832-9268-4032-8311-faf6ccb350fe", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5e67f754-4b53-485b-b7e7-ed38714867cd", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eac79cf2-1a03-4efc-a3c8-f1e06ffbb00c", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19507dc9-c666-4aee-8724-726c45e9eae3", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ac48e6c-6308-4266-8f74-726a728b7c5c", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3ed57791-0e91-4ce8-98ab-7faca829a21e", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d556540-417e-41c0-8266-d27514c67835", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ce1d045d-9eba-4f04-8b83-9e92179b032f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b114b96c-6c29-49e0-9943-284619e0e237", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"258f809b-2a4c-47e5-b4bb-76191c23df6c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2bd4a99d-db64-4b07-8e7d-6c2b5f7dce6d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0f775390-2f95-49f1-b836-7544e5c553c9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5d602ada-4479-41f9-adcf-dbb591a02f78", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e7356832-9268-4032-8311-faf6ccb350fe", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5e67f754-4b53-485b-b7e7-ed38714867cd", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eac79cf2-1a03-4efc-a3c8-f1e06ffbb00c", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"684d7faf-c9e3-44cb-8ebb-a7db34b6bdeb", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"684d7faf-c9e3-44cb-8ebb-a7db34b6bdeb", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"684d7faf-c9e3-44cb-8ebb-a7db34b6bdeb", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b9cb387-a5e5-4d8c-b9cc-cd9f4a0660a5", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b9cb387-a5e5-4d8c-b9cc-cd9f4a0660a5", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b9cb387-a5e5-4d8c-b9cc-cd9f4a0660a5", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f6b63409-1554-41ba-8cef-9b287114ce86", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9ab4d6a0-1033-4abf-9896-c6c266353182", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9ab4d6a0-1033-4abf-9896-c6c266353182", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9ab4d6a0-1033-4abf-9896-c6c266353182", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3258057b-9ce6-4833-ae28-fca30e2597e4", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3258057b-9ce6-4833-ae28-fca30e2597e4", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"decc0ea5-edbe-4bde-afab-127228f8a001", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"77eefd1a-cef6-40fb-b9e2-a2d1cbfc8958", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"77eefd1a-cef6-40fb-b9e2-a2d1cbfc8958", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02e592e8-b651-4751-8700-789933b21fa9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8f3241c0-7c8e-407a-a780-75b67621c645", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d425a8b5-7659-45c8-8e9a-ea0555001d4f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d425a8b5-7659-45c8-8e9a-ea0555001d4f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7297bdf4-2d26-4dc2-9dd1-d61d2a63a852", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d113c3fd-460e-49d9-8cf3-4fcf9d65dab2", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c422f913-52a8-4c28-b279-b677925e15ee", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"684d7faf-c9e3-44cb-8ebb-a7db34b6bdeb", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b9cb387-a5e5-4d8c-b9cc-cd9f4a0660a5", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f6b63409-1554-41ba-8cef-9b287114ce86", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9ab4d6a0-1033-4abf-9896-c6c266353182", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3258057b-9ce6-4833-ae28-fca30e2597e4", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"decc0ea5-edbe-4bde-afab-127228f8a001", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"77eefd1a-cef6-40fb-b9e2-a2d1cbfc8958", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02e592e8-b651-4751-8700-789933b21fa9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8f3241c0-7c8e-407a-a780-75b67621c645", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d425a8b5-7659-45c8-8e9a-ea0555001d4f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7297bdf4-2d26-4dc2-9dd1-d61d2a63a852", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d113c3fd-460e-49d9-8cf3-4fcf9d65dab2", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c422f913-52a8-4c28-b279-b677925e15ee", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bca0b26d-9436-4a93-9857-9f1deb6bd785", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bca0b26d-9436-4a93-9857-9f1deb6bd785", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bca0b26d-9436-4a93-9857-9f1deb6bd785", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"209aebd0-4d65-4749-b033-ab93acca11a2", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"209aebd0-4d65-4749-b033-ab93acca11a2", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"209aebd0-4d65-4749-b033-ab93acca11a2", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a6e3e54e-b1a9-456f-b572-37beade8d236", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"33cd04c0-1773-4d78-80ce-444d99228031", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"33cd04c0-1773-4d78-80ce-444d99228031", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"33cd04c0-1773-4d78-80ce-444d99228031", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b08da367-6e66-420c-a2df-bdf559bfe8d3", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b08da367-6e66-420c-a2df-bdf559bfe8d3", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba7ec682-3067-445d-a605-e77df3f42541", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a429c64f-aff5-4571-8127-3e5e966266bd", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a429c64f-aff5-4571-8127-3e5e966266bd", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"39c0cbc9-efc4-470d-84d6-97e18182159a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dc3bcb0e-bf6a-42f8-8580-a731bbc9663c", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e440f9dd-7690-444a-8eb0-9f7c76fb1c96", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e440f9dd-7690-444a-8eb0-9f7c76fb1c96", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b6e95a6b-2944-466d-b499-a9fa5dcd2826", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89efec0a-02b2-49fc-a30d-f8667fa6071b", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7da87ede-b238-4c06-b793-f659e414962c", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bca0b26d-9436-4a93-9857-9f1deb6bd785", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"209aebd0-4d65-4749-b033-ab93acca11a2", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a6e3e54e-b1a9-456f-b572-37beade8d236", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"33cd04c0-1773-4d78-80ce-444d99228031", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b08da367-6e66-420c-a2df-bdf559bfe8d3", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba7ec682-3067-445d-a605-e77df3f42541", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a429c64f-aff5-4571-8127-3e5e966266bd", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"39c0cbc9-efc4-470d-84d6-97e18182159a", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dc3bcb0e-bf6a-42f8-8580-a731bbc9663c", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e440f9dd-7690-444a-8eb0-9f7c76fb1c96", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b6e95a6b-2944-466d-b499-a9fa5dcd2826", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89efec0a-02b2-49fc-a30d-f8667fa6071b", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7da87ede-b238-4c06-b793-f659e414962c", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24479c6a-41db-491f-b66f-c4ddf8838b68", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24479c6a-41db-491f-b66f-c4ddf8838b68", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24479c6a-41db-491f-b66f-c4ddf8838b68", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3eb94bef-a544-4d7b-b9ed-06bd09dd91af", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3eb94bef-a544-4d7b-b9ed-06bd09dd91af", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3eb94bef-a544-4d7b-b9ed-06bd09dd91af", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ead33502-f577-4b3c-a817-9f91f080df4c", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fe8fffca-8e18-4f47-b8b6-e6f7fc3a5452", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fe8fffca-8e18-4f47-b8b6-e6f7fc3a5452", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fe8fffca-8e18-4f47-b8b6-e6f7fc3a5452", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"79c73415-b95a-41cf-bdca-14005983ef54", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"79c73415-b95a-41cf-bdca-14005983ef54", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f6f15e2f-154f-4d33-8995-9758c480cce4", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e47e1dac-2a75-4b7d-93ed-a28ac8bd2850", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e47e1dac-2a75-4b7d-93ed-a28ac8bd2850", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d37b34c-0c25-489f-9465-98bd92148755", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4f8bf64a-5fd0-4a2f-8a30-296ffcb506ec", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"65c6aec2-6b81-41e3-8596-bce93b9e9425", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"65c6aec2-6b81-41e3-8596-bce93b9e9425", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"de772de0-5e59-4941-b925-54396617c36b", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67870927-c5ab-4f3e-8a8a-4590e7b16c83", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7e20bd96-987f-494e-94a1-53c27140b1f6", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24479c6a-41db-491f-b66f-c4ddf8838b68", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3eb94bef-a544-4d7b-b9ed-06bd09dd91af", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ead33502-f577-4b3c-a817-9f91f080df4c", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fe8fffca-8e18-4f47-b8b6-e6f7fc3a5452", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"79c73415-b95a-41cf-bdca-14005983ef54", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f6f15e2f-154f-4d33-8995-9758c480cce4", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e47e1dac-2a75-4b7d-93ed-a28ac8bd2850", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d37b34c-0c25-489f-9465-98bd92148755", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4f8bf64a-5fd0-4a2f-8a30-296ffcb506ec", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"65c6aec2-6b81-41e3-8596-bce93b9e9425", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"de772de0-5e59-4941-b925-54396617c36b", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67870927-c5ab-4f3e-8a8a-4590e7b16c83", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7e20bd96-987f-494e-94a1-53c27140b1f6", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a5b0f668-d647-4139-a0af-7c20c6c7a9f7", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a5b0f668-d647-4139-a0af-7c20c6c7a9f7", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a5b0f668-d647-4139-a0af-7c20c6c7a9f7", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"147b6e80-30c1-4011-9a45-735b79e9139a", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"147b6e80-30c1-4011-9a45-735b79e9139a", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"147b6e80-30c1-4011-9a45-735b79e9139a", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bd2d1eb7-2813-420e-a56d-f70f906a09af", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a4958c1-2f16-47f2-8372-0139dd5e7c88", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a4958c1-2f16-47f2-8372-0139dd5e7c88", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a4958c1-2f16-47f2-8372-0139dd5e7c88", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"853c30e7-e74e-4488-bcd4-1c5574d2ccba", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"853c30e7-e74e-4488-bcd4-1c5574d2ccba", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6de7cac0-6949-4d33-a8ce-98f7dcc1e558", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"45d69557-0007-4c70-9805-7fe407fda4b1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"45d69557-0007-4c70-9805-7fe407fda4b1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"91e8394d-3cb0-44f0-9b7d-7d3cc00ce665", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1c2ccab3-fd72-4531-8549-b834bee313f2", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dcdbaa71-d75c-42d4-b69b-6f0e8a10553d", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dcdbaa71-d75c-42d4-b69b-6f0e8a10553d", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e6972c23-5cb9-4c62-b92a-0f267f794a94", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bfdfb809-5765-4ffe-af9e-58c7472510cf", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba2f5671-0bae-4068-b46c-9bb664e60ead", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a5b0f668-d647-4139-a0af-7c20c6c7a9f7", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"147b6e80-30c1-4011-9a45-735b79e9139a", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bd2d1eb7-2813-420e-a56d-f70f906a09af", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a4958c1-2f16-47f2-8372-0139dd5e7c88", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"853c30e7-e74e-4488-bcd4-1c5574d2ccba", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6de7cac0-6949-4d33-a8ce-98f7dcc1e558", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"45d69557-0007-4c70-9805-7fe407fda4b1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"91e8394d-3cb0-44f0-9b7d-7d3cc00ce665", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1c2ccab3-fd72-4531-8549-b834bee313f2", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dcdbaa71-d75c-42d4-b69b-6f0e8a10553d", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e6972c23-5cb9-4c62-b92a-0f267f794a94", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bfdfb809-5765-4ffe-af9e-58c7472510cf", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba2f5671-0bae-4068-b46c-9bb664e60ead", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e94e610-723e-4860-b2b8-8c95d2369f7c", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e94e610-723e-4860-b2b8-8c95d2369f7c", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e94e610-723e-4860-b2b8-8c95d2369f7c", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ea3254b0-2411-47f7-a161-3cd08a79fe79", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ea3254b0-2411-47f7-a161-3cd08a79fe79", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ea3254b0-2411-47f7-a161-3cd08a79fe79", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5c543e8f-c5b3-4416-b19f-e730c50d1642", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8da31a15-0f60-4ec6-9cd5-7d62a50bae83", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8da31a15-0f60-4ec6-9cd5-7d62a50bae83", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8da31a15-0f60-4ec6-9cd5-7d62a50bae83", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b13c1f43-64c9-4b25-a779-137639b28f58", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b13c1f43-64c9-4b25-a779-137639b28f58", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"81a370d7-bd2c-4b41-8a40-aae31707d08a", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d8504b0-3180-422b-b6e8-1d0f9748d9ab", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d8504b0-3180-422b-b6e8-1d0f9748d9ab", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"aec7d7c6-a323-44f9-83a2-4b9831276efa", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f3dbe62d-d414-4a5e-85f0-0c7540d6effc", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24cd8a09-d537-42b7-8520-1fc241eedc06", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24cd8a09-d537-42b7-8520-1fc241eedc06", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"376dd96e-4ea5-41a9-8db7-7f8bbce1856f", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"79cd5316-192d-45e3-b5e7-81c01b52deee", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ae61190-9070-4203-895f-f4259058896f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e94e610-723e-4860-b2b8-8c95d2369f7c", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ea3254b0-2411-47f7-a161-3cd08a79fe79", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5c543e8f-c5b3-4416-b19f-e730c50d1642", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8da31a15-0f60-4ec6-9cd5-7d62a50bae83", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b13c1f43-64c9-4b25-a779-137639b28f58", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"81a370d7-bd2c-4b41-8a40-aae31707d08a", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4d8504b0-3180-422b-b6e8-1d0f9748d9ab", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"aec7d7c6-a323-44f9-83a2-4b9831276efa", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f3dbe62d-d414-4a5e-85f0-0c7540d6effc", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24cd8a09-d537-42b7-8520-1fc241eedc06", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"376dd96e-4ea5-41a9-8db7-7f8bbce1856f", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"79cd5316-192d-45e3-b5e7-81c01b52deee", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7ae61190-9070-4203-895f-f4259058896f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4372376e-76fe-4e27-adfe-299546ec0c35", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4372376e-76fe-4e27-adfe-299546ec0c35", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ff12d1cd-2dd5-4bfc-983d-2cad2b8a6695", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ff12d1cd-2dd5-4bfc-983d-2cad2b8a6695", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7c481006-9e41-42e1-a8ba-4ccba1be8dab", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7c481006-9e41-42e1-a8ba-4ccba1be8dab", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7c481006-9e41-42e1-a8ba-4ccba1be8dab", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"866c4aad-b8d6-46ec-bdd4-64d4e547d952", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"866c4aad-b8d6-46ec-bdd4-64d4e547d952", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"866c4aad-b8d6-46ec-bdd4-64d4e547d952", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba5d8dee-a8ef-4cf8-827f-5f02a0cd6b75", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b724db99-4f95-4ac8-b54c-1f0a117bc61b", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b724db99-4f95-4ac8-b54c-1f0a117bc61b", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b724db99-4f95-4ac8-b54c-1f0a117bc61b", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6eab0333-3243-4058-b87d-ebbc15fe9225", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6eab0333-3243-4058-b87d-ebbc15fe9225", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c34eb04c-d3d2-48b2-95cd-0ee55753441e", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"60424c59-b392-437b-9e20-3069fa328ea1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"60424c59-b392-437b-9e20-3069fa328ea1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d998f6c7-1b12-433e-98c4-47f6bcdb74fe", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c0b1d3a-3512-4340-b8aa-0177e41d66fb", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dc4ef180-77f9-4c09-9af0-5bf9045a0725", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dc4ef180-77f9-4c09-9af0-5bf9045a0725", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"12189ff7-23ea-41f6-9667-81ea114f9cc9", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ef965475-3628-4e7d-abd0-55dd3338ea5f", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"77fc3193-61b1-41d8-abd5-c1336d316e2f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7c481006-9e41-42e1-a8ba-4ccba1be8dab", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"866c4aad-b8d6-46ec-bdd4-64d4e547d952", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ba5d8dee-a8ef-4cf8-827f-5f02a0cd6b75", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b724db99-4f95-4ac8-b54c-1f0a117bc61b", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6eab0333-3243-4058-b87d-ebbc15fe9225", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c34eb04c-d3d2-48b2-95cd-0ee55753441e", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"60424c59-b392-437b-9e20-3069fa328ea1", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d998f6c7-1b12-433e-98c4-47f6bcdb74fe", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c0b1d3a-3512-4340-b8aa-0177e41d66fb", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dc4ef180-77f9-4c09-9af0-5bf9045a0725", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"12189ff7-23ea-41f6-9667-81ea114f9cc9", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ef965475-3628-4e7d-abd0-55dd3338ea5f", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"77fc3193-61b1-41d8-abd5-c1336d316e2f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1f1b632-5261-44e3-abd7-7eabbf2e5958", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1f1b632-5261-44e3-abd7-7eabbf2e5958", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1f1b632-5261-44e3-abd7-7eabbf2e5958", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"52d856c4-d7db-4be1-8080-f4187c9b554e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"52d856c4-d7db-4be1-8080-f4187c9b554e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"52d856c4-d7db-4be1-8080-f4187c9b554e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"87bc4ba5-ed11-483a-9528-37e611710b60", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1a882b5-19ae-47fa-9e0a-453f597676fc", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1a882b5-19ae-47fa-9e0a-453f597676fc", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1a882b5-19ae-47fa-9e0a-453f597676fc", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0d105e7-85b4-4533-8ec0-b4374faf88f9", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0d105e7-85b4-4533-8ec0-b4374faf88f9", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eacbc315-ee78-4173-af7c-fc4759c294a7", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e1c2892-fd23-4b30-aac7-afbe82a1818d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e1c2892-fd23-4b30-aac7-afbe82a1818d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"54f3a181-aa8c-448d-9c40-8c8f6cd94a9e", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a62240f6-fc28-415f-87f3-b747e488543e", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9a64e525-aea1-4bcc-8cab-85dd3e9bd566", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9a64e525-aea1-4bcc-8cab-85dd3e9bd566", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89d65630-4749-477d-bedd-d3de2d5435f2", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7903968d-ddbd-442c-8b9c-ef7a41bbc601", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b63846f9-f73f-4e8d-86c2-67729552ce5f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1f1b632-5261-44e3-abd7-7eabbf2e5958", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"52d856c4-d7db-4be1-8080-f4187c9b554e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"87bc4ba5-ed11-483a-9528-37e611710b60", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1a882b5-19ae-47fa-9e0a-453f597676fc", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0d105e7-85b4-4533-8ec0-b4374faf88f9", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eacbc315-ee78-4173-af7c-fc4759c294a7", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e1c2892-fd23-4b30-aac7-afbe82a1818d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"54f3a181-aa8c-448d-9c40-8c8f6cd94a9e", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a62240f6-fc28-415f-87f3-b747e488543e", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9a64e525-aea1-4bcc-8cab-85dd3e9bd566", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"89d65630-4749-477d-bedd-d3de2d5435f2", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7903968d-ddbd-442c-8b9c-ef7a41bbc601", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b63846f9-f73f-4e8d-86c2-67729552ce5f", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02858e82-9829-4ba0-a52b-33b84dc7c37e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02858e82-9829-4ba0-a52b-33b84dc7c37e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ad884eb-2fbc-4ec8-b416-13cd4339bf05", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0ad884eb-2fbc-4ec8-b416-13cd4339bf05", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"23136737-63de-4e77-b415-f5421e2070f1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"23136737-63de-4e77-b415-f5421e2070f1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be7c021c-5e9e-4653-860b-2cd063567bbe", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be7c021c-5e9e-4653-860b-2cd063567bbe", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14db2c1d-c409-44cf-93e0-544ef47f5697", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14db2c1d-c409-44cf-93e0-544ef47f5697", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14db2c1d-c409-44cf-93e0-544ef47f5697", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dd28693-0365-420d-8c0d-46dd5fe944b7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dd28693-0365-420d-8c0d-46dd5fe944b7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dd28693-0365-420d-8c0d-46dd5fe944b7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b2e4f963-856d-45f0-a0b4-475be9e792e6", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"118ac6c4-a15f-476a-b092-9fe3df841db8", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"118ac6c4-a15f-476a-b092-9fe3df841db8", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"118ac6c4-a15f-476a-b092-9fe3df841db8", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2141794e-34c0-4115-801a-d9b77b9be654", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2141794e-34c0-4115-801a-d9b77b9be654", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f7f37d66-53e1-4579-a193-887cfd349de0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4866b6b8-4186-4a88-abc0-723e94605485", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4866b6b8-4186-4a88-abc0-723e94605485", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1eacea47-5f44-4d33-b297-442af7c838d0", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"58d21d68-ca13-4d9c-9786-15940dedf6c1", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be8883e9-a96d-434e-a1cc-8ed2bd9a2879", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be8883e9-a96d-434e-a1cc-8ed2bd9a2879", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad81f00e-e1cf-4979-8fd6-4a082bc4bd71", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d459e0ed-d881-4904-bcb5-fd3c57d1991e", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7dba8a0f-02c0-4cf6-bb7c-584986fc7cf9", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14db2c1d-c409-44cf-93e0-544ef47f5697", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dd28693-0365-420d-8c0d-46dd5fe944b7", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b2e4f963-856d-45f0-a0b4-475be9e792e6", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"118ac6c4-a15f-476a-b092-9fe3df841db8", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2141794e-34c0-4115-801a-d9b77b9be654", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f7f37d66-53e1-4579-a193-887cfd349de0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4866b6b8-4186-4a88-abc0-723e94605485", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1eacea47-5f44-4d33-b297-442af7c838d0", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"58d21d68-ca13-4d9c-9786-15940dedf6c1", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be8883e9-a96d-434e-a1cc-8ed2bd9a2879", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad81f00e-e1cf-4979-8fd6-4a082bc4bd71", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d459e0ed-d881-4904-bcb5-fd3c57d1991e", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7dba8a0f-02c0-4cf6-bb7c-584986fc7cf9", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c235c756-2f76-4a09-9879-8c34e8aaa489", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c235c756-2f76-4a09-9879-8c34e8aaa489", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c235c756-2f76-4a09-9879-8c34e8aaa489", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8b7a09d4-d8ca-4e68-9dcf-dd66db6ef43e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8b7a09d4-d8ca-4e68-9dcf-dd66db6ef43e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8b7a09d4-d8ca-4e68-9dcf-dd66db6ef43e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b53d9304-8b78-4d91-a506-3a3d428b6d70", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6dc243fc-f3e8-4cc7-96d9-1c203bbe35c0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6dc243fc-f3e8-4cc7-96d9-1c203bbe35c0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6dc243fc-f3e8-4cc7-96d9-1c203bbe35c0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6ed2b760-b946-4edd-8673-5c37b894665a", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6ed2b760-b946-4edd-8673-5c37b894665a", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5cc3433d-fe86-447c-85ff-37f468755191", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bbf2940a-615b-4718-a928-6390e23b615c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bbf2940a-615b-4718-a928-6390e23b615c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"69fdcfd1-b740-4ec4-a0ac-545c14d068e6", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9d910c8f-6001-4cc8-8498-9e39781499d9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ed395be1-6690-40ef-b5a0-ea544e98c5e1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ed395be1-6690-40ef-b5a0-ea544e98c5e1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"363bb999-03e5-4dc1-b322-52a9233d000c", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"99612cb1-7fc6-4e2a-9efd-9355273aa790", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"122d5f38-296b-49de-9d75-94aaf4a8001d", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c235c756-2f76-4a09-9879-8c34e8aaa489", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8b7a09d4-d8ca-4e68-9dcf-dd66db6ef43e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b53d9304-8b78-4d91-a506-3a3d428b6d70", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6dc243fc-f3e8-4cc7-96d9-1c203bbe35c0", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6ed2b760-b946-4edd-8673-5c37b894665a", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5cc3433d-fe86-447c-85ff-37f468755191", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bbf2940a-615b-4718-a928-6390e23b615c", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"69fdcfd1-b740-4ec4-a0ac-545c14d068e6", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9d910c8f-6001-4cc8-8498-9e39781499d9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ed395be1-6690-40ef-b5a0-ea544e98c5e1", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"363bb999-03e5-4dc1-b322-52a9233d000c", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"99612cb1-7fc6-4e2a-9efd-9355273aa790", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"122d5f38-296b-49de-9d75-94aaf4a8001d", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14af91d9-92ff-42a4-baaa-42cfd0f2b93d", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14af91d9-92ff-42a4-baaa-42cfd0f2b93d", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14af91d9-92ff-42a4-baaa-42cfd0f2b93d", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"48933319-4f19-47f6-80d6-10e709a32082", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"48933319-4f19-47f6-80d6-10e709a32082", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"48933319-4f19-47f6-80d6-10e709a32082", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"36368231-57cc-4096-a324-e2672b32d64a", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"47dd0b41-c9ef-4aa8-b18c-62d65a1900e9", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"47dd0b41-c9ef-4aa8-b18c-62d65a1900e9", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"47dd0b41-c9ef-4aa8-b18c-62d65a1900e9", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"88a9fd34-f417-465e-826f-708869483e3f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"88a9fd34-f417-465e-826f-708869483e3f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e7599f7c-af4b-4d84-8395-706548c007f4", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fbbc3636-7ebf-4116-b671-7e3543b01480", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fbbc3636-7ebf-4116-b671-7e3543b01480", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7d72e2ab-9feb-49b9-b9ac-b1139061fa19", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c72f9795-6a2e-4a6c-93f5-35f142ca07bb", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"39577ba8-4872-4698-bc4f-f99dcd17e457", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"39577ba8-4872-4698-bc4f-f99dcd17e457", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4235ff63-7c26-4843-be43-c8735aaf0662", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"da212ebf-6e3c-4213-8af3-17034b43bfc5", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e477e732-e948-4d19-8667-9263baede2ce", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"14af91d9-92ff-42a4-baaa-42cfd0f2b93d", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"48933319-4f19-47f6-80d6-10e709a32082", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"36368231-57cc-4096-a324-e2672b32d64a", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"47dd0b41-c9ef-4aa8-b18c-62d65a1900e9", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"88a9fd34-f417-465e-826f-708869483e3f", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e7599f7c-af4b-4d84-8395-706548c007f4", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fbbc3636-7ebf-4116-b671-7e3543b01480", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"7d72e2ab-9feb-49b9-b9ac-b1139061fa19", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c72f9795-6a2e-4a6c-93f5-35f142ca07bb", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"39577ba8-4872-4698-bc4f-f99dcd17e457", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4235ff63-7c26-4843-be43-c8735aaf0662", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"da212ebf-6e3c-4213-8af3-17034b43bfc5", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e477e732-e948-4d19-8667-9263baede2ce", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"51709055-fcd4-4433-a81c-062f8100b3d3", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"51709055-fcd4-4433-a81c-062f8100b3d3", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"41230db3-b794-4a34-be97-59330275c281", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"41230db3-b794-4a34-be97-59330275c281", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4933337e-0341-4255-a70a-68551d1ccba2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4933337e-0341-4255-a70a-68551d1ccba2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f1b34f68-99f7-4541-a44f-9c4cba8474d1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3fbdd462-61de-4571-bc36-a7e92ededca7", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"51e6f8e4-e4a2-4ce5-bda1-7c5836f9ed6b", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"51e6f8e4-e4a2-4ce5-bda1-7c5836f9ed6b", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"5c57ff95-d155-45c4-819c-d010e7400473", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a23f9da-53c1-4f33-9c7c-9a9bc144693f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f1b34f68-99f7-4541-a44f-9c4cba8474d1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3fbdd462-61de-4571-bc36-a7e92ededca7", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"51e6f8e4-e4a2-4ce5-bda1-7c5836f9ed6b", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"5c57ff95-d155-45c4-819c-d010e7400473", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6a23f9da-53c1-4f33-9c7c-9a9bc144693f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fb0a1169-e687-49e3-9c5f-40f8ac93a926", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fb0a1169-e687-49e3-9c5f-40f8ac93a926", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2ea8c246-6d08-4874-aff9-14e345a60f09", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2ea8c246-6d08-4874-aff9-14e345a60f09", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d6ea8cab-8610-4662-af0a-67069ddd2e49", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d6ea8cab-8610-4662-af0a-67069ddd2e49", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2bd8258b-b760-42a0-b46b-bfa0171dc595", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"9f6b95bc-a307-4f67-a88c-444915ad84f3", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"8c599278-8d8b-4ed0-b38f-a77fc81819ba", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"8c599278-8d8b-4ed0-b38f-a77fc81819ba", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"d872cf9d-b0c5-4700-89f5-c67c50b8f25e", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be0161cf-fe1e-467d-951c-e9d641ea6d33", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2bd8258b-b760-42a0-b46b-bfa0171dc595", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"9f6b95bc-a307-4f67-a88c-444915ad84f3", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"8c599278-8d8b-4ed0-b38f-a77fc81819ba", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"d872cf9d-b0c5-4700-89f5-c67c50b8f25e", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"be0161cf-fe1e-467d-951c-e9d641ea6d33", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad8eb285-0102-40e4-86bf-98be19710c99", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad8eb285-0102-40e4-86bf-98be19710c99", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1159aa1-3c73-4c99-b206-74bebfa0faed", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1159aa1-3c73-4c99-b206-74bebfa0faed", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6bacf4f4-a395-4388-9a8b-b409a76c753d", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6bacf4f4-a395-4388-9a8b-b409a76c753d", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"594839af-804d-4074-9be7-eb5794922637", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy cat", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"594839af-804d-4074-9be7-eb5794922637", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy cat", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f91ef4c0-d23e-4248-b0f7-aaa04d820acf", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f91ef4c0-d23e-4248-b0f7-aaa04d820acf", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61fb5553-2e20-4733-9712-013807c70fc1", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy cat", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61fb5553-2e20-4733-9712-013807c70fc1", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy cat", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e5464c99-850e-4d49-8655-e8a2dae5f2ac", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"A", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"B", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"C", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"D", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e5464c99-850e-4d49-8655-e8a2dae5f2ac", "question_comment"=>"", "question_text"=>"The quick brown fox jumped over the lazy dog", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b091631c-7a09-4745-93f7-e81823856028", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"db04a381-cf98-4db4-a78f-d09d5332503c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"a45b0914-5a5b-4d37-8890-22aaf606926f", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"a45b0914-5a5b-4d37-8890-22aaf606926f", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"2a6d3464-f3c6-4dee-bde0-93a487bb35b8", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"733a2809-58a8-4023-b47d-74c28b08456f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b091631c-7a09-4745-93f7-e81823856028", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"db04a381-cf98-4db4-a78f-d09d5332503c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"a45b0914-5a5b-4d37-8890-22aaf606926f", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"2a6d3464-f3c6-4dee-bde0-93a487bb35b8", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"733a2809-58a8-4023-b47d-74c28b08456f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"60fe3b0b-178d-4fcf-9958-7b498e977b3f", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"60fe3b0b-178d-4fcf-9958-7b498e977b3f", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad0979e2-3328-4e1c-9b13-c1a4d80bdf64", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ad0979e2-3328-4e1c-9b13-c1a4d80bdf64", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b4b6e707-34d3-4967-b4ba-56b3db085352", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b4b6e707-34d3-4967-b4ba-56b3db085352", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9503206d-18d1-4794-be85-1f6bfce849b3", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9503206d-18d1-4794-be85-1f6bfce849b3", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0119d496-0127-4820-b0e2-aefa0fd431a9", "question_comment"=>"", "question_text"=>"This is the most recent version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0119d496-0127-4820-b0e2-aefa0fd431a9", "question_comment"=>"", "question_text"=>"This is the most recent version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7d25b32-261d-460c-9329-018076da2d96", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7d25b32-261d-460c-9329-018076da2d96", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"23254bb7-3516-484b-a92f-5768d8835e8e", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"23254bb7-3516-484b-a92f-5768d8835e8e", "question_comment"=>"", "question_text"=>"This is the previous version: Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eaa3b9d7-ce4e-4f73-bf29-a3172ff07ed6", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eaa3b9d7-ce4e-4f73-bf29-a3172ff07ed6", "question_comment"=>"", "question_text"=>"This was the original version: Witch of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67c552c7-2a07-48b5-8024-67e77bb502a0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67c552c7-2a07-48b5-8024-67e77bb502a0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67c552c7-2a07-48b5-8024-67e77bb502a0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1c7d3c7-8f39-4c65-a8c5-006bf9c2d483", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1c7d3c7-8f39-4c65-a8c5-006bf9c2d483", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1c7d3c7-8f39-4c65-a8c5-006bf9c2d483", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dfbe65a8-6f7a-468c-8c60-86c1af3901ae", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c30f095f-4542-4dac-b773-6138c016f92c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c30f095f-4542-4dac-b773-6138c016f92c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c30f095f-4542-4dac-b773-6138c016f92c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3a731189-bfcc-44fe-9ed2-9fc53f75bd5d", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3a731189-bfcc-44fe-9ed2-9fc53f75bd5d", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ecbfe13b-f5d6-493a-8297-ea8cec7a10e2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9c22d91d-541c-4429-86fd-02214075ae7d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9c22d91d-541c-4429-86fd-02214075ae7d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"651a4ed5-2861-4fc7-926d-206ba3f38e0d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"75efe864-8bb1-4a4c-a5a0-c750ca8396ab", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"06e231d1-9395-42df-b911-cd24801d2c0f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"06e231d1-9395-42df-b911-cd24801d2c0f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"076e7be9-1989-4ff5-a358-739607a82eda", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"604832ee-49af-40b0-8cf5-2644e40d39ef", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a663fa2-5d78-49a3-b445-c50db37c27ab", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"67c552c7-2a07-48b5-8024-67e77bb502a0", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c1c7d3c7-8f39-4c65-a8c5-006bf9c2d483", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"dfbe65a8-6f7a-468c-8c60-86c1af3901ae", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c30f095f-4542-4dac-b773-6138c016f92c", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3a731189-bfcc-44fe-9ed2-9fc53f75bd5d", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ecbfe13b-f5d6-493a-8297-ea8cec7a10e2", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9c22d91d-541c-4429-86fd-02214075ae7d", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"651a4ed5-2861-4fc7-926d-206ba3f38e0d", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"75efe864-8bb1-4a4c-a5a0-c750ca8396ab", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"06e231d1-9395-42df-b911-cd24801d2c0f", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"076e7be9-1989-4ff5-a358-739607a82eda", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"604832ee-49af-40b0-8cf5-2644e40d39ef", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a663fa2-5d78-49a3-b445-c50db37c27ab", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6d1504ae-3deb-4c3d-8ab0-41cd15558ae3", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6d1504ae-3deb-4c3d-8ab0-41cd15558ae3", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ab82bc70-7525-413e-8bfa-61ef691d6499", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ab82bc70-7525-413e-8bfa-61ef691d6499", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"95d0d5da-9d1d-43bf-b4b7-42db227db22f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"95d0d5da-9d1d-43bf-b4b7-42db227db22f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"cc8f7c5f-0f52-40c7-b5b9-d6f26157c0b7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"6c3f7cf5-a4c4-4246-b675-85d040689061", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d4398c51-9b74-47da-9ec8-09fed56b96e4", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d4398c51-9b74-47da-9ec8-09fed56b96e4", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"4b892add-88dc-4dc0-ad51-5764de0f34fa", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"393dcaa4-42cd-4582-9136-3f8ee8071b76", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"cc8f7c5f-0f52-40c7-b5b9-d6f26157c0b7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"6c3f7cf5-a4c4-4246-b675-85d040689061", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d4398c51-9b74-47da-9ec8-09fed56b96e4", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"4b892add-88dc-4dc0-ad51-5764de0f34fa", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"393dcaa4-42cd-4582-9136-3f8ee8071b76", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d09d9047-e70f-4081-9881-6ec7ccac89a1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"e7e5c189-3248-49b9-ad5d-bb5e010bbc58", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9cee0fcf-0420-4d4a-81af-a583c53ae87e", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9cee0fcf-0420-4d4a-81af-a583c53ae87e", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"3e55decf-0128-4f40-b2a2-6ed472cc2823", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"635cfae9-a529-4201-930d-3f3f650d54d1", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d09d9047-e70f-4081-9881-6ec7ccac89a1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"e7e5c189-3248-49b9-ad5d-bb5e010bbc58", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9cee0fcf-0420-4d4a-81af-a583c53ae87e", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"3e55decf-0128-4f40-b2a2-6ed472cc2823", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"635cfae9-a529-4201-930d-3f3f650d54d1", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"514f5d65-0f3d-4f6e-8bad-92b2a1c68fb1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"f9be720a-ad67-4986-bb03-0efe0c745054", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"745d3e24-747a-4395-a381-e85666ac0ae0", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"745d3e24-747a-4395-a381-e85666ac0ae0", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"8261fba0-08db-45c9-9cc7-75e1b18a4d2d", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3f2d148-5f02-4d6f-b795-75de8c14a5d8", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"514f5d65-0f3d-4f6e-8bad-92b2a1c68fb1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"f9be720a-ad67-4986-bb03-0efe0c745054", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"745d3e24-747a-4395-a381-e85666ac0ae0", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"8261fba0-08db-45c9-9cc7-75e1b18a4d2d", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c3f2d148-5f02-4d6f-b795-75de8c14a5d8", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a4169fe-2acb-4043-821b-c9ee8372374f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"8f3a3623-b8f9-4e39-a221-733f942ca42e", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b7b6b68d-6672-4a69-ad5e-a26e26ccb9dc", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b7b6b68d-6672-4a69-ad5e-a26e26ccb9dc", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"cd1aafad-458d-49ea-a4a7-5a564bcb92de", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5779882e-00f3-47e4-8b11-f6c756d5a386", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a4169fe-2acb-4043-821b-c9ee8372374f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"8f3a3623-b8f9-4e39-a221-733f942ca42e", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b7b6b68d-6672-4a69-ad5e-a26e26ccb9dc", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"cd1aafad-458d-49ea-a4a7-5a564bcb92de", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5779882e-00f3-47e4-8b11-f6c756d5a386", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"85988a75-806a-4b41-90a3-a209529c8a2f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0ae6b26e-4b88-45b0-9769-a002cf5e75d7", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"37457bd6-7706-43e9-8e82-f0ddc8e6d827", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"37457bd6-7706-43e9-8e82-f0ddc8e6d827", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"b8d30ac9-c26b-4340-a5d8-9055268bfdb4", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"22e00da3-0d77-4cb2-b318-5f8bb70e2142", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"85988a75-806a-4b41-90a3-a209529c8a2f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0ae6b26e-4b88-45b0-9769-a002cf5e75d7", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"37457bd6-7706-43e9-8e82-f0ddc8e6d827", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"b8d30ac9-c26b-4340-a5d8-9055268bfdb4", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"22e00da3-0d77-4cb2-b318-5f8bb70e2142", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f3981283-c8a8-4084-9080-f434e382ca42", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"351841b0-c866-40d8-8687-9eb671ede872", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6688d4bb-2d40-456c-a58b-b56f781ca3f6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6688d4bb-2d40-456c-a58b-b56f781ca3f6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"d5529723-beb6-40c0-9e45-93a3bd27ddd8", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6eb51522-6643-4f04-8189-f622198b6c8e", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f3981283-c8a8-4084-9080-f434e382ca42", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"351841b0-c866-40d8-8687-9eb671ede872", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6688d4bb-2d40-456c-a58b-b56f781ca3f6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"d5529723-beb6-40c0-9e45-93a3bd27ddd8", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6eb51522-6643-4f04-8189-f622198b6c8e", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Green", "correct"=>false, "explanation"=>"Green is not a creative color."}, {"answer_text"=>"Black", "correct"=>false, "explanation"=>"Black is not a creative color."}, {"answer_text"=>"Blue", "correct"=>true, "explanation"=>"Blue is a creative color."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9e94b83b-1315-433a-a102-0d0b6992da8e", "question_comment"=>"", "question_text"=>"This is a source code test. What's your favorite creative color?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Green", "correct"=>false, "explanation"=>"Green is not a creative color."}, {"answer_text"=>"Black", "correct"=>false, "explanation"=>"Black is not a creative color."}, {"answer_text"=>"Blue", "correct"=>true, "explanation"=>"Blue is a creative color."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9e94b83b-1315-433a-a102-0d0b6992da8e", "question_comment"=>"", "question_text"=>"This is a source code test. What's your favorite creative color?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"16e490c7-1012-4742-aaa8-63715f1e7a29", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"16e490c7-1012-4742-aaa8-63715f1e7a29", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"139ed5f4-2ceb-4267-a289-e30b2068340e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"139ed5f4-2ceb-4267-a289-e30b2068340e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f1b6978d-9c92-46e3-823a-e771509cc75b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f1b6978d-9c92-46e3-823a-e771509cc75b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec73844e-5f37-4517-b9f0-ac1a7cf96756", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec73844e-5f37-4517-b9f0-ac1a7cf96756", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec73844e-5f37-4517-b9f0-ac1a7cf96756", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f997f324-49fd-4ebd-96f2-814e545c4a91", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f997f324-49fd-4ebd-96f2-814e545c4a91", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f997f324-49fd-4ebd-96f2-814e545c4a91", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dbbb8ba-9733-4a18-abd7-91d493bc3148", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"57355d05-4aa1-4888-81f7-874bf63c8aa5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"57355d05-4aa1-4888-81f7-874bf63c8aa5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"57355d05-4aa1-4888-81f7-874bf63c8aa5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b2b77a77-109f-4ed8-b9c3-87c1ad19fd12", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b2b77a77-109f-4ed8-b9c3-87c1ad19fd12", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"801545a4-ab88-436a-ab89-cbf54a430f41", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d60d5bb8-ee77-4ec0-9058-76a767944fe7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d60d5bb8-ee77-4ec0-9058-76a767944fe7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fd62956d-7d75-46e3-a6fa-73bbe175c8d9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a0fc28c1-586b-4014-b792-b10ed5dcf21b", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"257a75ef-4669-4386-960a-7b9111aca25b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"257a75ef-4669-4386-960a-7b9111aca25b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fb705c19-32f2-4016-ada9-d9d35f436769", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"27744b92-6a62-4182-89b4-4242e067e716", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a2b3d8fb-5dcd-427c-a659-b96e7ad67ab4", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec73844e-5f37-4517-b9f0-ac1a7cf96756", "question_comment"=>"", "question_text"=>"Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian\\'s (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f997f324-49fd-4ebd-96f2-814e545c4a91", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Make sure all the elements to be styled have a common parent (ancestor) element", "correct"=>false, "explanation"=>"Even when this is possible, it isn't enough to be able to selectively pick out just the elements you want.  Indeed, on a legal HTML 5 page, all the elements already have the common ancestor &lt;body&gt;."}, {"answer_text"=>"Give all the elements to be styled the same \"id\" attribute value", "correct"=>false, "explanation"=>"The \"id\" attribute value must be unique across all elements on a page."}, {"answer_text"=>"Give all the elements to be styled the same \"class\" attribute value", "correct"=>true, "explanation"=>"Since the same class can be applied to many elements, even if they are of different element types, it provides an easy way to apply a set of CSS style rules to many elements at once."}, {"answer_text"=>"Any of the above techniques would work", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4dbbb8ba-9733-4a18-abd7-91d493bc3148", "question_comment"=>"", "question_text"=>"In an HTML5 document, what would be the best way to apply the same text-styling rules to several pieces of text that are scattered over the page and are part of <i>different types</i> of HTML elements (&lt;p&gt;, &lt;span&gt;, etc.)?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"<tt>@first + \" \" + @last</tt>", "correct"=>true, "explanation"=>"<tt>@first</tt> and <tt>@last</tt> are instance\n        variables, so this statement works."}, {"answer_text"=>"<tt>self.first + \" \" + self.last</tt>", "correct"=>true, "explanation"=>"The <tt>first</tt> and <tt>last</tt> methods are\n            created by the call to <tt>attr_accessor</tt>."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}, {"answer_text"=>"<tt>\"\#{first} \#{last}\"</tt>", "correct"=>true, "explanation"=>"Here <tt>first</tt> and <tt>last</tt> are resolved\n            as method calls on <tt>self</tt>, though it's often clearer\n            to include <tt>self</tt> explicitly."}, {"answer_text"=>"<tt>self.@first + \" \" + self.@last</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means \"Call method <tt>b</tt>\n            on receiver <tt>a</tt>\", but <tt>@first</tt> cannot be a\n            legal Ruby method name."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"57355d05-4aa1-4888-81f7-874bf63c8aa5", "question_comment"=>"", "question_text"=>"        Consider the following Ruby class for a student with\n        instance variables for first and last name, and an incomplete method for\n        returning the student's full name:\n<pre>\nclass Student\n  attr_accessor :first, :last\n  def full_name\n     ____________\n  end\n end\n</pre>\n       Which of the following would be legal ways to fill in the blank\n       so that the <tt>full_name</tt> method returns a student's full\n       name (first followed by space followed by last)?  You can assume\n       first and last name are legal strings, and that '+' can be used to\n       concatenate strings.\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Both try to identify and estimate the impact of possible risks", "correct"=>true, "explanation"=>"Agile uses risk information to estimate the scope of a customer estimate, whereas P&D uses risk information up-front to adjust the schedule, but both methodologies take account of risk."}, {"answer_text"=>"Frequent iterations of the prototype are a risk-reduction tactic that is present in Agile but absent from P&D methodologies", "correct"=>false, "explanation"=>"Spiral and RUP incorporate frequent iteration as part of risk reduction."}, {"answer_text"=>"In both methodologies, nontechnical risks are more likely to jeopardize the schedule than technical risks.", "correct"=>false, "explanation"=>"In both methodologies, neither technical or nontechnical risks are inherently more serious than the other; either type could potentially have a serious impact on the schedule."}, {"answer_text"=>"Both must deal with customers asking for changes after schedule is in place and project starts", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b2b77a77-109f-4ed8-b9c3-87c1ad19fd12", "question_comment"=>"", "question_text"=>"Comparing plan-and-document vs. agile approaches to cost estimation, which statements are TRUE:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"<tt>@student.first + \" \" + @student.last</tt>", "correct"=>true, "explanation"=>"This works by using the accessors for first and last."}, {"answer_text"=>"<tt>@student.full</tt>", "correct"=>false, "explanation"=>"There is no accessor method defined for the <tt>@full</tt> instance variable."}, {"answer_text"=>"<tt>@student.@full</tt>", "correct"=>false, "explanation"=>"<tt>a.b</tt> always means call method b on object a, but <tt>@full</tt> is\n               not a legal method name."}, {"answer_text"=>"<tt>Student.first + \" \" + Student.last</tt>", "correct"=>false, "explanation"=>"This would be correct if <tt>first</tt> and <tt>last</tt>\n            were class (\"static\") methods, but they are instance methods."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"801545a4-ab88-436a-ab89-cbf54a430f41", "question_comment"=>"", "question_text"=>"        Consider the following Ruby code:\n<pre>\nclass Student\n  attr_reader :first, :last\n  def initialize(first, last)\n    @first = first\n    @last = last\n    @full = first + ' ' + last\n end\nend\n</pre>\n       Suppose from OUTSIDE the class we execute <tt>@student = Student.new('Armando','Fox')</tt>.\n       Which of the following expressions will return this student's full\n       name (first followed by space followed by last)?\n", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"In an MVC app, every valid route must eventually trigger a controller action.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"One common set of RESTful resource actions are the CRUD actions on models.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"A route always contains one or more wildcard parameters, such as \":id\", to identify the particular resource named in the operation.", "correct"=>false, "explanation"=>"Some routes, such as those to list all resources of a given type or create a new resource of a given type, don't require any such identifier."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d60d5bb8-ee77-4ec0-9058-76a767944fe7", "question_comment"=>"", "question_text"=>"Which statements are TRUE regarding Rails routes and the resources to which they refer?", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fd62956d-7d75-46e3-a6fa-73bbe175c8d9", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - uses indentation to indicate element nesting?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Haml", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Erb", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"both", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a0fc28c1-586b-4014-b792-b10ed5dcf21b", "question_comment"=>"", "question_text"=>"Which rendering system - Haml or Erb - allows not only Ruby variables but arbitrary Ruby code to be interpolated into a template?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"a nonfunctional requirement", "correct"=>false, "explanation"=>"Nonfunctional requirements encompass areas such as reliability and security, but\n       this requirement is strictly about app behavior."}, {"answer_text"=>"a functional requirement", "correct"=>true, "explanation"=>"Correct, because functional requirements are about customer-specified app behavior."}, {"answer_text"=>"an implicit requirement", "correct"=>true, "explanation"=>"Correct, because it derives from the explicit requirement that the Swizzle animation be used"}, {"answer_text"=>"an explicit requirement", "correct"=>false, "explanation"=>"The explicit requirement is that the Swizzle animation occur. The way in which this is accomplished entails implicit requirements, such as the use of a particular library."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"257a75ef-4669-4386-960a-7b9111aca25b", "question_comment"=>"", "question_text"=>"Your customer explains that it's really important that some UI elements on her site's signup page use a fancy new animation called Swizzle.  Your developers learn that the effect is only available by using a new JavaScript library called jWiggle, and they are concerned about whether there may be compatibility problems between jWiggle and other JavaScript code in your app.  In terms of requirements, the use of jWiggle is:", "multiple"=>true, "randomize"=>false, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The Product Owner sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"The Project Manager sets the number of points each story is worth", "correct"=>false, "explanation"=>"The team typically votes or comes to group consensus on point values for stories."}, {"answer_text"=>"Anyone can work on a story and mark it Finished, but only the Product Owner can officially Deliver it to the customer", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Anyone can mark a story Delivered, but only the Product Owner can mark it as Accepted or Rejected", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"fb705c19-32f2-4016-ada9-d9d35f436769", "question_comment"=>"", "question_text"=>"Which statement best reflects how Agile Scrum-based teams would prioritize and deliver User Stories?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Fork, develop the feature on master of your own fork, and do a pull request", "correct"=>false, "explanation"=>"Since deployment is from the main repo's master branch and not your fork, it's OK to pollute your master branch."}, {"answer_text"=>"Fork, develop the feature on another branch of your own fork, and do a pull request", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Create a branch on the main repo, develop on that branch, then merge the branch into master", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Develop directly on master if the feature only affects one or two files", "correct"=>true, "explanation"=>"Never develop directly on whichever branch is the 'clean' branch that is safe to deploy.  By assumption, in this question that would be the master branch."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"27744b92-6a62-4182-89b4-4242e067e716", "question_comment"=>"", "question_text"=>"Assuming you are using the \"deploy from master\" methodology in your team, which of the following is NOT a good practice for adding code for a new feature?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Why your xterm window defaults to 80 columns", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"The first computer offered for sale to consumers", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Mabel the swimming wonder monkey", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a2b3d8fb-5dcd-427c-a659-b96e7ad67ab4", "question_comment"=>"", "question_text"=>"Please answer without asking a colleague or reviewing the lecture videos from this Tuesday: Which topic was NOT included in Armando's Computer History Minute this week?", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e044d28-b736-4253-9e90-a6c36d5c6c27", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e044d28-b736-4253-9e90-a6c36d5c6c27", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e044d28-b736-4253-9e90-a6c36d5c6c27", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b367ccd0-fa6b-4310-a891-cb55fa0e3f7e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b367ccd0-fa6b-4310-a891-cb55fa0e3f7e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b367ccd0-fa6b-4310-a891-cb55fa0e3f7e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e044d28-b736-4253-9e90-a6c36d5c6c27", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b367ccd0-fa6b-4310-a891-cb55fa0e3f7e", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c5f0ffc5-dcfd-4388-9fbc-55e91b9a9103", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c5f0ffc5-dcfd-4388-9fbc-55e91b9a9103", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c5f0ffc5-dcfd-4388-9fbc-55e91b9a9103", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26e53adb-b8e6-427b-9941-f3222931e373", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26e53adb-b8e6-427b-9941-f3222931e373", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26e53adb-b8e6-427b-9941-f3222931e373", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c5f0ffc5-dcfd-4388-9fbc-55e91b9a9103", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26e53adb-b8e6-427b-9941-f3222931e373", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c37ed62-1ff0-47a7-8a87-4d00f9431a58", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c37ed62-1ff0-47a7-8a87-4d00f9431a58", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c37ed62-1ff0-47a7-8a87-4d00f9431a58", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f47fe1f2-e59c-48d3-b5de-5486aa8fdb67", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f47fe1f2-e59c-48d3-b5de-5486aa8fdb67", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f47fe1f2-e59c-48d3-b5de-5486aa8fdb67", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8c37ed62-1ff0-47a7-8a87-4d00f9431a58", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f47fe1f2-e59c-48d3-b5de-5486aa8fdb67", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec99da91-339b-40d3-b224-ce30f20ec331", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec99da91-339b-40d3-b224-ce30f20ec331", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec99da91-339b-40d3-b224-ce30f20ec331", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0f0ec17-fb38-4834-beed-8abb96274f8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0f0ec17-fb38-4834-beed-8abb96274f8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0f0ec17-fb38-4834-beed-8abb96274f8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ec99da91-339b-40d3-b224-ce30f20ec331", "question_comment"=>"", "question_text"=>"This should disappear Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?", "multiple"=>true, "randomize"=>false, "uid"=>1234, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies", "correct"=>true, "explanation"=>"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            "}, {"answer_text"=>"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.", "correct"=>false, "explanation"=>"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            "}, {"answer_text"=>"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.", "correct"=>true, "explanation"=>"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            "}, {"answer_text"=>"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b0f0ec17-fb38-4834-beed-8abb96274f8b", "question_comment"=>"", "question_text"=>"Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?", "multiple"=>true, "randomize"=>false, "uid"=>5678, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"29639cdc-a52b-4f6a-a9a9-d6ee924d1587", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3c0ed8ba-f4eb-4295-9860-0aee603964bd", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"2ddba6f3-d400-45b1-b095-32632362c97c", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"2ddba6f3-d400-45b1-b095-32632362c97c", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"65a431c8-5996-4715-9ac3-ca0fc7e94c58", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8bc9791c-99f5-44b9-bf6f-ae652135a0ea", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"29639cdc-a52b-4f6a-a9a9-d6ee924d1587", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3c0ed8ba-f4eb-4295-9860-0aee603964bd", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"2ddba6f3-d400-45b1-b095-32632362c97c", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"65a431c8-5996-4715-9ac3-ca0fc7e94c58", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8bc9791c-99f5-44b9-bf6f-ae652135a0ea", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d7180833-cdf6-4e46-9e77-9fc84cc3b31b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5045d8bb-8352-4aa1-a773-8d8f1133450c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bd32ef7c-30e4-42d5-9163-9918ce82485e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"f6ce8b41-9dfc-4b0f-bcf3-d708fafe7701", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"4de6b869-6b24-4bed-8e18-1be84f370275", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"4de6b869-6b24-4bed-8e18-1be84f370275", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"a05e0d84-4b4a-47a1-8778-47a550140499", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a211cc8d-e9bd-4452-b192-e25fb037d985", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bd32ef7c-30e4-42d5-9163-9918ce82485e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"f6ce8b41-9dfc-4b0f-bcf3-d708fafe7701", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"4de6b869-6b24-4bed-8e18-1be84f370275", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"a05e0d84-4b4a-47a1-8778-47a550140499", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a211cc8d-e9bd-4452-b192-e25fb037d985", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8875163-69fb-4f3c-8f5a-a0b854819f8c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"91e539c7-8569-4fb5-88ad-2d831ddc5767", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6e367e36-820b-4c65-82c3-217db5f2e348", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6e367e36-820b-4c65-82c3-217db5f2e348", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"36150cc6-fb07-444b-9080-dd21ff835447", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9d9ada4c-2741-4e36-884c-daffd69d3786", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8875163-69fb-4f3c-8f5a-a0b854819f8c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"91e539c7-8569-4fb5-88ad-2d831ddc5767", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"6e367e36-820b-4c65-82c3-217db5f2e348", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"36150cc6-fb07-444b-9080-dd21ff835447", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9d9ada4c-2741-4e36-884c-daffd69d3786", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61a2ee5a-48c1-4c91-b735-06b604d016fa", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61a2ee5a-48c1-4c91-b735-06b604d016fa", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"349d00da-202e-4074-bd01-2c86bd78454a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"349d00da-202e-4074-bd01-2c86bd78454a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02cbaf7d-6766-4e71-a0dc-2bf018cbe4d2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"02cbaf7d-6766-4e71-a0dc-2bf018cbe4d2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b33d6746-37b8-420e-907c-68ed54df6a66", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b33d6746-37b8-420e-907c-68ed54df6a66", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"681dfb03-0423-4ab9-9459-843cd446451c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"681dfb03-0423-4ab9-9459-843cd446451c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8429731-fda6-4438-86a9-a89849861d35", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8429731-fda6-4438-86a9-a89849861d35", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2a44789b-8513-41c6-8b6b-d262ff060ee5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"2a44789b-8513-41c6-8b6b-d262ff060ee5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5bdb730c-5932-4775-93ae-04283e3d514d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5bdb730c-5932-4775-93ae-04283e3d514d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"367a0942-67b3-4668-aa32-7860feef58b1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"367a0942-67b3-4668-aa32-7860feef58b1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e087c46-346e-4ead-867b-f1f98ed0f5fd", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e087c46-346e-4ead-867b-f1f98ed0f5fd", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4aa2a74c-da0d-426b-8c05-6f6c3c4ae67d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4aa2a74c-da0d-426b-8c05-6f6c3c4ae67d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"130e8883-cd3b-4405-8436-7fa1eed06cff", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"130e8883-cd3b-4405-8436-7fa1eed06cff", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d565c47d-63f1-423b-8bee-4db400a4a194", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d565c47d-63f1-423b-8bee-4db400a4a194", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"10ec4a9f-7bb9-4e7a-8e99-2be473cc9931", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"10ec4a9f-7bb9-4e7a-8e99-2be473cc9931", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"07f7b4d5-af49-457e-aef0-5c463f4805a1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"07f7b4d5-af49-457e-aef0-5c463f4805a1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"208ed5f7-0cd9-4f93-ac2a-8d688406f940", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"208ed5f7-0cd9-4f93-ac2a-8d688406f940", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8a527696-de32-4c25-91d1-717089a4181e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8a527696-de32-4c25-91d1-717089a4181e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"296ca6c9-3c04-4f46-acfb-17a7a56df242", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"296ca6c9-3c04-4f46-acfb-17a7a56df242", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c985d791-d619-434b-a8ca-c8c9a6887520", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c985d791-d619-434b-a8ca-c8c9a6887520", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3e9ffaa3-7960-4153-a30a-5ef65dcafed4", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"3e9ffaa3-7960-4153-a30a-5ef65dcafed4", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a8c25e9-4d27-490f-93fb-7f07ac02b929", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0c25258c-2408-407f-8143-95b2abb3618c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"02d676df-d61e-4623-96cb-a07c2bab4431", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"02d676df-d61e-4623-96cb-a07c2bab4431", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"0e62d1d9-31a1-4965-80bc-804c2fc02168", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"effe7ac4-6be0-46be-a1c6-bbc42df13cc4", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a8c25e9-4d27-490f-93fb-7f07ac02b929", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0c25258c-2408-407f-8143-95b2abb3618c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"02d676df-d61e-4623-96cb-a07c2bab4431", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"0e62d1d9-31a1-4965-80bc-804c2fc02168", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"effe7ac4-6be0-46be-a1c6-bbc42df13cc4", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a9f66809-7704-4713-89bb-5160c0e45f8f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a9f66809-7704-4713-89bb-5160c0e45f8f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4fef7c25-0f5d-48d4-8f62-171d3cee56d5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4fef7c25-0f5d-48d4-8f62-171d3cee56d5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a68a1114-6b14-4b92-95a6-e4035bfec2ec", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a68a1114-6b14-4b92-95a6-e4035bfec2ec", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"870b86b9-bb59-41ca-91ef-d3e27ec2d0ca", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"96d44287-3bc2-4249-9e8f-f53fb31c56b3", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"34953539-c9b1-4e6d-a4c9-b04ee5a6cdd6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"34953539-c9b1-4e6d-a4c9-b04ee5a6cdd6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"339c757f-4b03-41b9-8261-27776f20221f", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"21abb178-2207-4a3e-9e53-173b2ca868f0", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"870b86b9-bb59-41ca-91ef-d3e27ec2d0ca", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"96d44287-3bc2-4249-9e8f-f53fb31c56b3", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"34953539-c9b1-4e6d-a4c9-b04ee5a6cdd6", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"339c757f-4b03-41b9-8261-27776f20221f", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"21abb178-2207-4a3e-9e53-173b2ca868f0", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d12ee863-11ee-4c59-a79d-5738037359d5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d12ee863-11ee-4c59-a79d-5738037359d5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ded8c474-58fe-4d95-b971-4ac11bc8fb2b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ded8c474-58fe-4d95-b971-4ac11bc8fb2b", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"25270b1f-7524-4f82-98c8-e48aad905857", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"25270b1f-7524-4f82-98c8-e48aad905857", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"da89c83b-d96f-4f73-a4a2-d57930864a61", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"da89c83b-d96f-4f73-a4a2-d57930864a61", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a47db4e-ba4a-4f6e-bf57-e7aeab1c0b54", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5a47db4e-ba4a-4f6e-bf57-e7aeab1c0b54", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8aca4ab-248d-42b9-9e92-18f95ce38463", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c8aca4ab-248d-42b9-9e92-18f95ce38463", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"42d9a48b-3292-4f32-af08-7a418fae3242", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"85e51a3e-b479-4765-91e0-1f785d06ad77", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"dee42237-db4f-4d68-9be9-e1f7c8fe4929", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"dee42237-db4f-4d68-9be9-e1f7c8fe4929", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"e028b041-75af-4dcc-8282-07abb08d292d", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"466e920f-efbe-4ef0-a4e3-c28d8281fa39", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"42d9a48b-3292-4f32-af08-7a418fae3242", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"85e51a3e-b479-4765-91e0-1f785d06ad77", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"dee42237-db4f-4d68-9be9-e1f7c8fe4929", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"e028b041-75af-4dcc-8282-07abb08d292d", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"466e920f-efbe-4ef0-a4e3-c28d8281fa39", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a9a4b633-1bd5-4d58-a43f-90ab0eb63036", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a9a4b633-1bd5-4d58-a43f-90ab0eb63036", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"128ab0e6-f40d-4b03-8ad4-157ed75cde55", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"128ab0e6-f40d-4b03-8ad4-157ed75cde55", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"76089597-f91b-4bb0-bd96-d38fb0d0ebf7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"76089597-f91b-4bb0-bd96-d38fb0d0ebf7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b45b6c53-2b02-4234-ac55-caa94c59014f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0762edd8-fb56-4356-a811-0f9f0baeb08c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"0846fc58-5f05-45aa-81f3-f43441314a66", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"0846fc58-5f05-45aa-81f3-f43441314a66", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"64f9240c-8ef6-4369-9280-ae3f9d43151c", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26545f09-8cbc-49f9-9a0f-2d06e36e313a", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b45b6c53-2b02-4234-ac55-caa94c59014f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"0762edd8-fb56-4356-a811-0f9f0baeb08c", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"0846fc58-5f05-45aa-81f3-f43441314a66", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"64f9240c-8ef6-4369-9280-ae3f9d43151c", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"26545f09-8cbc-49f9-9a0f-2d06e36e313a", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6684c941-2b8e-425a-abb5-ac53c1d3af5f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6684c941-2b8e-425a-abb5-ac53c1d3af5f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61012835-d8a9-4502-bafe-3cf71731bea7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"61012835-d8a9-4502-bafe-3cf71731bea7", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24ca1677-b1ef-44ea-8450-ea9e43a83b03", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"24ca1677-b1ef-44ea-8450-ea9e43a83b03", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d0a38c5c-ce7f-4017-890d-a9d56d613bd2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"52bcdb17-818a-47a8-8e6c-aec119c8460d", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"fc31d998-15b7-440b-b0c4-fdd634bf5ff5", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"fc31d998-15b7-440b-b0c4-fdd634bf5ff5", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"052f403c-a15e-45d5-8b2b-b3d2ea9ee714", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eb8d6e66-1448-4f5a-a9bd-a57cc3413bf7", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d0a38c5c-ce7f-4017-890d-a9d56d613bd2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"52bcdb17-818a-47a8-8e6c-aec119c8460d", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"fc31d998-15b7-440b-b0c4-fdd634bf5ff5", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"052f403c-a15e-45d5-8b2b-b3d2ea9ee714", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"eb8d6e66-1448-4f5a-a9bd-a57cc3413bf7", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d4698855-5f50-4462-be62-a0b697799de1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d4698855-5f50-4462-be62-a0b697799de1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e243626e-bc69-452c-8416-6374b420738e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e243626e-bc69-452c-8416-6374b420738e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19da7b79-b003-46a6-8507-b0ccb4173799", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"19da7b79-b003-46a6-8507-b0ccb4173799", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"34559729-e7ae-4281-9566-2dd061c6649d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"54ede523-ccde-4895-b093-03e3a9f13a57", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b5040382-b3e2-4b85-93c6-4d51cdaa6efd", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b5040382-b3e2-4b85-93c6-4d51cdaa6efd", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"42548ce4-ea7e-4ead-ac05-305f042ef8b7", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bbd810c4-461a-46e0-ae2e-8fbab5cc696f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"34559729-e7ae-4281-9566-2dd061c6649d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"54ede523-ccde-4895-b093-03e3a9f13a57", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"b5040382-b3e2-4b85-93c6-4d51cdaa6efd", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"42548ce4-ea7e-4ead-ac05-305f042ef8b7", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bbd810c4-461a-46e0-ae2e-8fbab5cc696f", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d9dc87e1-229f-4614-bb8d-6bb9e2080fbd", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"d9dc87e1-229f-4614-bb8d-6bb9e2080fbd", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"28fca7a1-bc4f-447f-9dcf-bee189f9f7f4", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"28fca7a1-bc4f-447f-9dcf-bee189f9f7f4", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"206baf97-a1f5-4dd9-902e-c512f32c1c2d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"206baf97-a1f5-4dd9-902e-c512f32c1c2d", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9f3e4199-f21f-42d3-8a21-528ef1cab91a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"9f3e4199-f21f-42d3-8a21-528ef1cab91a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e0ea826-7d50-4ae1-b528-b1a06d4d197b", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will raise an exception and grind to a halt", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will continue, and the messages will go into the log file", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"The SaaS gods will strike you down in a fit of rage", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4e0ea826-7d50-4ae1-b528-b1a06d4d197b", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"daac248d-cb55-44eb-9ce1-9eb207deb9aa", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will raise an exception and grind to a halt", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will continue, and the messages will go into the log file", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"The SaaS gods will strike you down in a fit of rage", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"daac248d-cb55-44eb-9ce1-9eb207deb9aa", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"345ff34e-59a7-4155-b8e1-d4fbffe70672", "question_comment"=>"", "question_text"=>"If you use <tt>putss</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will raise an exception and grind to a halt", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will continue, and the messages will go into the log file", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"The SaaS gods will strike you down in a fit of rage", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"345ff34e-59a7-4155-b8e1-d4fbffe70672", "question_comment"=>"", "question_text"=>"If you use <tt>putss</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b7e3684-6f5a-4154-904b-349c898dd5a9", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Your app will continue, but the messages will be lost forever", "correct"=>true, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will raise an exception and grind to a halt", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"Your app will continue, and the messages will go into the log file", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}, {"answer_text"=>"The SaaS gods will strike you down in a fit of rage", "correct"=>false, "explanation"=>"Printing to the log file would be the right thing to do, but it doesn't happen automatically.  Instead the messages will get silently lost."}], "points"=>1, "raw"=>true, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0b7e3684-6f5a-4154-904b-349c898dd5a9", "question_comment"=>"", "question_text"=>"If you use <tt>puts</tt> or <tt>printf</tt> to print debugging messages in a production app:", "multiple"=>false, "randomize"=>false, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bdc2cd40-7803-4dbc-b6c3-5c34a7c9da44", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"bdc2cd40-7803-4dbc-b6c3-5c34a7c9da44", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1e79334f-22d8-4610-a09f-0ede47dfb3fa", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"1e79334f-22d8-4610-a09f-0ede47dfb3fa", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a97ebe9f-2c7c-4220-b17b-37363ca83e8c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a97ebe9f-2c7c-4220-b17b-37363ca83e8c", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6ab3fad5-6eca-4e08-ad1f-b1074b230ab6", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"4eb1dcff-5209-4c19-9510-bdbddce947f6", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"95095481-2dfa-4f5b-bbc0-a0fcd1c687a2", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"95095481-2dfa-4f5b-bbc0-a0fcd1c687a2", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"cde83b43-1f27-439b-b4a8-6f72effb370a", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0da126e7-a7be-4c1d-8b3c-bc0f9a7e5338", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6ab3fad5-6eca-4e08-ad1f-b1074b230ab6", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"4eb1dcff-5209-4c19-9510-bdbddce947f6", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"95095481-2dfa-4f5b-bbc0-a0fcd1c687a2", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"cde83b43-1f27-439b-b4a8-6f72effb370a", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"0da126e7-a7be-4c1d-8b3c-bc0f9a7e5338", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"099815bd-fbce-488b-8094-3b3bf363fe49", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3cefa7a6-3f7e-4cdc-999a-485f5fb94008", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d67eeac7-6958-4b56-b538-6243bb722241", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d67eeac7-6958-4b56-b538-6243bb722241", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"c4147f2f-766e-4bcf-a1ce-96925b779cf1", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5eb6915c-f274-4495-aaaa-03820f37505e", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"099815bd-fbce-488b-8094-3b3bf363fe49", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"3cefa7a6-3f7e-4cdc-999a-485f5fb94008", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"d67eeac7-6958-4b56-b538-6243bb722241", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"c4147f2f-766e-4bcf-a1ce-96925b779cf1", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"5eb6915c-f274-4495-aaaa-03820f37505e", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"470f8912-38c8-4562-a9da-3ad9af81cb25", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"b727db3a-460b-4ee6-926b-7797e6d597b1", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9b23b7a3-98bc-42f8-a0b2-cf6bb61c2a62", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9b23b7a3-98bc-42f8-a0b2-cf6bb61c2a62", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"43e36ec5-7fea-4218-a19f-d1126a0dd790", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f87b3f98-5840-444f-8078-404b14cd3770", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"470f8912-38c8-4562-a9da-3ad9af81cb25", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"80", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"400", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"3000", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"8000", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag"], "question_uid"=>"b727db3a-460b-4ee6-926b-7797e6d597b1", "question_comment"=>"", "question_text"=>"The implied port number of the URI <tt>http://google.com</tt> is", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag", "test_tag2"], "question_uid"=>"9b23b7a3-98bc-42f8-a0b2-cf6bb61c2a62", "question_comment"=>"", "question_text"=>"Which tiers in the three-tier architecture are involved in handling views?", "multiple"=>true, "randomize"=>true, "question_type"=>"SelectMultiple"}
{"answers"=>[{"answer_text"=>"Presentation", "correct"=>true, "explanation"=>nil}, {"answer_text"=>"Logic", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Persistence", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"Database", "correct"=>false, "explanation"=>nil}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>["test_tag2"], "question_uid"=>"43e36ec5-7fea-4218-a19f-d1126a0dd790", "question_comment"=>"", "question_text"=>"The ----- tier of three-tier SaaS apps is the most complicated to scale.", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"CRUD action, database", "correct"=>false, "explanation"=>nil}, {"answer_text"=>"header, cookie", "correct"=>false, "explanation"=>"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one."}, {"answer_text"=>"URL, wildcard", "correct"=>false, "explanation"=>"A URL is necessary, but not a wildcard."}, {"answer_text"=>"URI, HTTP request method", "correct"=>true, "explanation"=>"The URI alone isn't enough--the same URI used with two different methods can cause two different actions."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f87b3f98-5840-444f-8078-404b14cd3770", "question_comment"=>"", "question_text"=>"An HTTP request must consist of both a(n) ----- and a(n) -----", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"53f6cff3-64e3-4f46-914c-a58a76eb718f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"53f6cff3-64e3-4f46-914c-a58a76eb718f", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e0503b5-deb9-4384-9a36-69ba0a33fd27", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8e0503b5-deb9-4384-9a36-69ba0a33fd27", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c0615558-9862-454f-9e99-569513604691", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"c0615558-9862-454f-9e99-569513604691", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6bdda183-fdd1-40c4-ab78-a8b4ff3a162a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6bdda183-fdd1-40c4-ab78-a8b4ff3a162a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"18a165f4-4646-44ee-a4b6-a9718b522182", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"18a165f4-4646-44ee-a4b6-a9718b522182", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f72bbd0f-4ebe-4b1e-ac4f-dc2a88287e5a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f72bbd0f-4ebe-4b1e-ac4f-dc2a88287e5a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6b09d55e-dbb9-4518-bb8d-fda00a0816e5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6b09d55e-dbb9-4518-bb8d-fda00a0816e5", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1b5e90f-1349-4f02-a3fc-324a9f3ed2fc", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1b5e90f-1349-4f02-a3fc-324a9f3ed2fc", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4c2068b2-36b1-4703-bedd-9cf11aa5ff59", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4c2068b2-36b1-4703-bedd-9cf11aa5ff59", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1849fb0-7036-40d5-98e1-47d643cd60ff", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"e1849fb0-7036-40d5-98e1-47d643cd60ff", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e272b0e-8177-4553-9cda-b318b39e3a96", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"6e272b0e-8177-4553-9cda-b318b39e3a96", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ada415f7-1982-4385-9d17-5baeb17c1db2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ada415f7-1982-4385-9d17-5baeb17c1db2", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"df556f97-debb-40d0-b825-63ee00bab6d8", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"df556f97-debb-40d0-b825-63ee00bab6d8", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4cd86a80-be8c-41ef-bb77-e651b0480b03", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"4cd86a80-be8c-41ef-bb77-e651b0480b03", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ae7a94ca-40be-494c-b39f-090ca782a805", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"ae7a94ca-40be-494c-b39f-090ca782a805", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d84796d-6f70-495a-8312-6a9d17d4ac45", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"8d84796d-6f70-495a-8312-6a9d17d4ac45", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"aa7dc55a-e6c2-4e2b-a01b-6de30e3fdae1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"aa7dc55a-e6c2-4e2b-a01b-6de30e3fdae1", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"13c29139-16b1-4421-829c-5bedba2f8dd6", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"13c29139-16b1-4421-829c-5bedba2f8dd6", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"416ac499-0771-41b7-97b9-ec8d9c1e3f2e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"416ac499-0771-41b7-97b9-ec8d9c1e3f2e", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a32e726b-bded-4ba2-b684-bf6d9cdb0a4a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a32e726b-bded-4ba2-b684-bf6d9cdb0a4a", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7cc52df-dc63-4a90-9581-d745f9b080a9", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"a7cc52df-dc63-4a90-9581-d745f9b080a9", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f093d778-e945-4ed0-b54c-dc6ebfd9ae42", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"f093d778-e945-4ed0-b54c-dc6ebfd9ae42", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"af186cdb-413b-445d-b41e-aff9af07cb41", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"af186cdb-413b-445d-b41e-aff9af07cb41", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8a101da-029b-43bd-b831-e467b70f3585", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
{"answers"=>[{"answer_text"=>"HTTP", "correct"=>false, "explanation"=>"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers."}, {"answer_text"=>"Get, Put, Post, Delete", "correct"=>false, "explanation"=>"These are four of the methods or \"verbs\" used by HTTP."}, {"answer_text"=>"CRUD", "correct"=>true, "explanation"=>"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps."}, {"answer_text"=>"REST", "correct"=>false, "explanation"=>"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource."}], "points"=>1, "raw"=>nil, "global_explanation"=>nil, "name"=>nil, "question_image"=>nil, "question_tags"=>[], "question_uid"=>"b8a101da-029b-43bd-b831-e467b70f3585", "question_comment"=>"", "question_text"=>"Which of the following best identifies the four basic operations supported by RDBMS?", "multiple"=>false, "randomize"=>true, "question_type"=>"MultipleChoice"}
