Connecting to database specified by database.yml
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (6.9ms)[0m  INSERT INTO "instructors" ("created_at", "current_collection", "name", "privilege", "provider", "uid", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["current_collection", nil], ["name", "Example User"], ["privilege", nil], ["provider", "github"], ["uid", "1234"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[36m (14.6ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "tags" ("created_at", "name", "updated_at") VALUES (?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["name", "quiz 1"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[35m (4.9ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "tags" ("created_at", "name", "updated_at") VALUES (?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["name", "quiz 2"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[36m (5.2ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "tags" ("created_at", "name", "updated_at") VALUES (?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["name", "quiz 3"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[35m (5.0ms)[0m  commit transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "tags" ("created_at", "name", "updated_at") VALUES (?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["name", "quiz 4"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[36m (4.8ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mCollection Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Fall 14' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
  [1m[35mCollection Exists (0.1ms)[0m  SELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Spring 15' LIMIT 1
  [1m[36m (0.0ms)[0m  [1mrollback transaction[0m
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36mCollection Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Spring 14' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  rollback transaction
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["created_by", nil], ["created_date", Sat, 09 Jun 2012 21:51:55 UTC +00:00], ["instructor_id", 3], ["is_public", true], ["json", ""], ["last_used", nil], ["problem_type", nil], ["rendered_text", nil], ["text", "select_multiple do\n    text %q{Around 2007, the claim \"Rails doesn't scale\"  was attributed to\nTwitter engineers, and the fact that Twitter later moved\naway from Rails was cited by some as evidence that the claim was true.\nWhich of the following statements (there may be more than one) describe Raffi\nKrikorian's (Twitter Director of Engineering) views on this subject?}\n    answer \"Rails itself isn't the problem, but the original Ruby VM does have some performance problems that impede scaling for heavy server workloads.\"\n    answer \"Rails itself isn't the problem, but the development processes typically used around Rails don't scale well to large teams.\"\n    distractor \"If you're building a startup and expect high volume, Raffi Krikorian would advise you to stay away from Ruby and Rails from the start.\"\n    answer \"If Twitter had been architected as a service-oriented architecture from the start, they might have stayed on Ruby/Rails somewhat longer than they did.\"\n  end"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "problems_tags" ("problem_id", "tag_id") VALUES (5, 9)[0m
  [1m[35m (0.0ms)[0m  INSERT INTO "problems_tags" ("problem_id", "tag_id") VALUES (5, 12)
  [1m[36mCollection Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Fall 14' LIMIT 1[0m
  [1m[35mCollection Exists (0.1ms)[0m  SELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Spring 15' LIMIT 1
  [1m[32mSOLR Request (4.0ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[36m (6.4ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36mSQL (0.5ms)[0m  [1mINSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00], ["created_by", nil], ["created_date", Sun, 09 Jun 2013 21:51:55 UTC +00:00], ["instructor_id", 3], ["is_public", true], ["json", ""], ["last_used", nil], ["problem_type", nil], ["rendered_text", nil], ["text", "select_multiple do\n\n    text %q{Which statements comparing Plan-and-Document (P&D) with\n            Agile software engineering processes are true?}\n\n    answer \"The basic types of activities involved in software\n            engineering are the same in P&D and Agile methodologies\",\n    :explanation => \"\n            True: requirements analysis, design, testing, development,\n            deployment/delivery, and maintenance are all part of both\n            P&D and Agile, but their interaction over the project\n            lifetime differs between P&D and Agile.\n            \"\n\n    distractor \"Because Agile tends to focus on small teams, it cannot\n                be used effectively to build large systems.\",\n    :explanation => \"\n            False: many Agile-developed small services can be connected\n            together to form large services in a Service-Oriented Architecture.\n            For example, Amazon.com is architected this way.\n            \"\n\n    answer \"The Waterfall methodology involves the customer much more heavily at\n            the beginning and end of the lifecycle, whereas the XP (extreme\n            programming) methodology involves the customer throughout\n            the lifecycle.\",\n    :explanation => \"\n            True: a basic tenet of XP is getting frequent feedback from\n            the customer and using it to inform the next iteration of\n            work.\n            \"\n\n    answer \"The Spiral methodology combines elements of the waterfall model\n            with intermediate prototypes.\"\n\n  end"], ["updated_at", Fri, 17 Apr 2015 23:31:11 UTC +00:00]]
  [1m[35m (0.1ms)[0m  INSERT INTO "problems_tags" ("problem_id", "tag_id") VALUES (6, 9)
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "problems_tags" ("problem_id", "tag_id") VALUES (6, 10)[0m
  [1m[35mCollection Exists (0.1ms)[0m  SELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Spring 15' LIMIT 1
  [1m[36mCollection Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'Spring 14' LIMIT 1[0m
  [1m[32mSOLR Request (4.0ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (5.9ms)[0m  commit transaction
Feature: Upload a RUql file
  As an instructor
  So that I can add questions
  I want to upload a RUql file

  Background:                                                  # features/upload.feature:6
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.0ms)[0m  commit transaction
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
  [1m[35mInstructor Load (0.2ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1
Started GET "/login" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#login as HTML
  Rendered sessions/login.html.haml within layouts/application (36.4ms)
  [1m[32mSOLR Request (73.8ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
Completed 200 OK in 161.8ms (Views: 87.1ms | ActiveRecord: 0.0ms | Solr: 8.1ms)
Started GET "/auth/github" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Started GET "/auth/github/callback" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#create as HTML
  Parameters: {"provider"=>"github"}
  [1m[36mInstructor Load (0.0ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1[0m
Redirected to http://www.example.com/problems
Completed 302 Found in 2.5ms (ActiveRecord: 0.0ms)
Started GET "/problems" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by ProblemsController#index as HTML
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
  [1m[36mCollection Load (0.2ms)[0m  [1mSELECT "collections".* FROM "collections" WHERE "collections"."instructor_id" = 1[0m
  [1m[32mSOLR Request (38.5ms)[0m  [ path=[1m[1mselect[0m parameters={fq: [1m[1m["type:Problem", "(instructor_id_i:1 OR is_public_b:true)", "coll_names_sm:[* TO *]"][0m, start: [1m[1m0[0m, rows: [1m[1m30[0m, q: [1m[1m"*:*"[0m} ]
  [1m[35mProblem Load (0.3ms)[0m  SELECT "problems".* FROM "problems" WHERE "problems"."id" IN (3, 4, 7, 8, 9, 5, 6)
  Rendered problems/_filter.html.haml (3.8ms)
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 3
  [1m[36mTag Load (0.0ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 3[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 4
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 4[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 5
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 5[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 6
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 6[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  Rendered shared/_problems_table.html.haml (25.2ms)
  Rendered problems/index.html.haml within layouts/application (35.9ms)
Completed 200 OK in 94.9ms (Views: 37.8ms | ActiveRecord: 1.8ms | Solr: 112.3ms)
    Given I am signed in with uid "1234" and provider "github" # features/step_definitions/login_steps.rb:8
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[36mInstructor Load (0.8ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  Rendered upload/index.html.haml within layouts/application (1.6ms)
Completed 200 OK in 8.2ms (Views: 4.7ms | ActiveRecord: 0.8ms | Solr: 0.0ms)
    And I am on the upload page                                # features/step_definitions/web_steps.rb:44

  Scenario: redirect to login page if not logged in            # features/upload.feature:10
Started POST "/logout" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#destroy as HTML
  Parameters: {"user_id"=>"1234"}
Redirected to http://www.example.com/login
Completed 302 Found in 0.7ms (ActiveRecord: 0.0ms)
    Given I am not logged in                                   # features/step_definitions/login_steps.rb:18
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" IS NULL LIMIT 1
Redirected to http://www.example.com/login
Filter chain halted as :set_current_user rendered or redirected
Completed 302 Found in 1.2ms (ActiveRecord: 0.1ms)
Started GET "/login" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#login as HTML
  Rendered sessions/login.html.haml within layouts/application (0.2ms)
Completed 200 OK in 1.8ms (Views: 1.7ms | ActiveRecord: 0.0ms | Solr: 0.0ms)
    And I am on the upload page                                # features/step_definitions/web_steps.rb:44
    Then I should be on the login page                         # features/step_definitions/web_steps.rb:230
  [1m[36m (0.1ms)[0m  [1mrollback transaction[0m

  Scenario: upload a file successfully                                   # features/upload.feature:15
  [1m[35m (0.8ms)[0m  begin transaction
  [1m[36m (0.0ms)[0m  [1mcommit transaction[0m
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1[0m
Started GET "/login" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#login as HTML
  Rendered sessions/login.html.haml within layouts/application (0.2ms)
Completed 200 OK in 2.0ms (Views: 1.8ms | ActiveRecord: 0.0ms | Solr: 0.0ms)
Started GET "/auth/github" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Started GET "/auth/github/callback" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#create as HTML
  Parameters: {"provider"=>"github"}
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1
Redirected to http://www.example.com/problems
Completed 302 Found in 1.5ms (ActiveRecord: 0.1ms)
Started GET "/problems" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by ProblemsController#index as HTML
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" WHERE "collections"."instructor_id" = 1
  [1m[32mSOLR Request (3.4ms)[0m  [ path=[1m[1mselect[0m parameters={fq: [1m[1m["type:Problem", "(instructor_id_i:1 OR is_public_b:true)", "coll_names_sm:[* TO *]"][0m, start: [1m[1m0[0m, rows: [1m[1m30[0m, q: [1m[1m"*:*"[0m} ]
  [1m[36mProblem Load (0.2ms)[0m  [1mSELECT "problems".* FROM "problems" WHERE "problems"."id" IN (3, 4, 7, 8, 9, 5, 6)[0m
  Rendered problems/_filter.html.haml (1.9ms)
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 3[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 3
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" [0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 4[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 4
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "collections".* FROM "collections" [0m
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 5[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 5
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "collections".* FROM "collections" [0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 6[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 6
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "collections".* FROM "collections" [0m
  Rendered shared/_problems_table.html.haml (13.7ms)
  Rendered problems/index.html.haml within layouts/application (16.1ms)
Completed 200 OK in 24.6ms (Views: 16.5ms | ActiveRecord: 1.5ms | Solr: 3.4ms)
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
  Rendered upload/index.html.haml within layouts/application (0.6ms)
Completed 200 OK in 3.1ms (Views: 2.1ms | ActiveRecord: 0.1ms | Solr: 0.0ms)
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  Rendered upload/index.html.haml within layouts/application (0.7ms)
Completed 200 OK in 3.6ms (Views: 2.6ms | ActiveRecord: 0.1ms | Solr: 0.0ms)
    Given I am on the upload page                                        # features/step_definitions/web_steps.rb:44
    And I attach the file "features/test_files/foo.txt" to "file_upload" # features/step_definitions/web_steps.rb:101
Started POST "/upload" for 127.0.0.1 at 2015-04-17 20:31:12 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#upload as HTML
  Parameters: {"utf8"=>"✓", "ruql_file"=>#<ActionDispatch::Http::UploadedFile:0xc1cc4a4 @original_filename="foo.txt", @content_type="text/plain", @headers="Content-Disposition: form-data; name=\"ruql_file\"; filename=\"foo.txt\"\r\nContent-Type: text/plain\r\nContent-Length: 2096\r\n", @tempfile=#<File:/tmp/RackMultipart20150417-4052-8qvqt6>>, "commit"=>"upload", ":as"=>"upload"}
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
A few example questions ,
A few example questions ,
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" WHERE "collections"."name" = 'A few example questions' LIMIT 1[0m
  [1m[35m (0.0ms)[0m  SAVEPOINT active_record_1
  [1m[36mCollection Exists (0.1ms)[0m  [1mSELECT 1 AS one FROM "collections" WHERE "collections"."name" = 'A few example questions' LIMIT 1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "collections" ("created_at", "description", "instructor_id", "last_used", "name", "updated_at") VALUES (?, ?, ?, ?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["description", nil], ["instructor_id", 1], ["last_used", nil], ["name", "A few example questions"], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[36m (0.0ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["created_by", nil], ["created_date", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["instructor_id", 1], ["is_public", false], ["json", "{\n  \"answers\": [\n    {\n      \"answer_text\": \"HTTP\",\n      \"correct\": false,\n      \"explanation\": \"HTTP stands for HyperText Transfer Protocol, which is used to transfer SaaS content to browsers.\"\n    },\n    {\n      \"answer_text\": \"Get, Put, Post, Delete\",\n      \"correct\": false,\n      \"explanation\": \"These are four of the methods or \\\"verbs\\\" used by HTTP.\"\n    },\n    {\n      \"answer_text\": \"CRUD\",\n      \"correct\": true,\n      \"explanation\": \"Create, Read, Update, Delete are the four basic database operations commonly performed by SaaS apps.\"\n    },\n    {\n      \"answer_text\": \"REST\",\n      \"correct\": false,\n      \"explanation\": \"REpresentational State Transfer is a design approach for making SaaS requests self-contained by having each request refer to a resource and an operation on that resource.\"\n    }\n  ],\n  \"points\": 1,\n  \"raw\": null,\n  \"name\": null,\n  \"question_tags\": [\n\n  ],\n  \"question_comment\": \"\",\n  \"question_text\": \"Which of the following best identifies the four basic operations supported by RDBMS?\",\n  \"multiple\": false,\n  \"randomize\": true,\n  \"question_type\": \"MultipleChoice\"\n}"], ["last_used", nil], ["problem_type", "MultipleChoice"], ["rendered_text", nil], ["text", ""], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[35m (0.1ms)[0m  INSERT INTO "collections_problems" ("problem_id", "collection_id") VALUES (7, 4)
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 7[0m
  [1m[32mSOLR Request (7.2ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.0ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["created_by", nil], ["created_date", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["instructor_id", 1], ["is_public", false], ["json", "{\n  \"answers\": [\n    {\n      \"answer_text\": \"80\",\n      \"correct\": true,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"400\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"3000\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"8000\",\n      \"correct\": false,\n      \"explanation\": null\n    }\n  ],\n  \"points\": 1,\n  \"raw\": null,\n  \"name\": null,\n  \"question_tags\": [\n\n  ],\n  \"question_comment\": \"\",\n  \"question_text\": \"The implied port number of the URI <tt>http://google.com</tt> is\",\n  \"multiple\": false,\n  \"randomize\": true,\n  \"question_type\": \"MultipleChoice\"\n}"], ["last_used", nil], ["problem_type", "MultipleChoice"], ["rendered_text", nil], ["text", ""], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "collections_problems" ("problem_id", "collection_id") VALUES (8, 4)[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 8
  [1m[32mSOLR Request (3.5ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[36m (0.1ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["created_by", nil], ["created_date", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["instructor_id", 1], ["is_public", false], ["json", "{\n  \"answers\": [\n    {\n      \"answer_text\": \"Presentation\",\n      \"correct\": true,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Logic\",\n      \"correct\": true,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Persistence\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Database\",\n      \"correct\": false,\n      \"explanation\": null\n    }\n  ],\n  \"points\": 1,\n  \"raw\": null,\n  \"name\": null,\n  \"question_tags\": [\n\n  ],\n  \"question_comment\": \"\",\n  \"question_text\": \"Which tiers in the three-tier architecture are involved in handling views?\",\n  \"multiple\": true,\n  \"randomize\": true,\n  \"question_type\": \"SelectMultiple\"\n}"], ["last_used", nil], ["problem_type", "SelectMultiple"], ["rendered_text", nil], ["text", ""], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[35m (0.1ms)[0m  INSERT INTO "collections_problems" ("problem_id", "collection_id") VALUES (9, 4)
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 9[0m
  [1m[32mSOLR Request (2.9ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.0ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["created_by", nil], ["created_date", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["instructor_id", 1], ["is_public", false], ["json", "{\n  \"answers\": [\n    {\n      \"answer_text\": \"Presentation\",\n      \"correct\": true,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Logic\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Persistence\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"Database\",\n      \"correct\": false,\n      \"explanation\": null\n    }\n  ],\n  \"points\": 1,\n  \"raw\": null,\n  \"name\": null,\n  \"question_tags\": [\n\n  ],\n  \"question_comment\": \"\",\n  \"question_text\": \"The ----- tier of three-tier SaaS apps is the most complicated to scale.\",\n  \"multiple\": false,\n  \"randomize\": true,\n  \"question_type\": \"MultipleChoice\"\n}"], ["last_used", nil], ["problem_type", "MultipleChoice"], ["rendered_text", nil], ["text", ""], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[36m (0.1ms)[0m  [1mINSERT INTO "collections_problems" ("problem_id", "collection_id") VALUES (10, 4)[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 10
  [1m[32mSOLR Request (3.5ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[36m (0.1ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.0ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "problems" ("created_at", "created_by", "created_date", "instructor_id", "is_public", "json", "last_used", "problem_type", "rendered_text", "text", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)[0m  [["created_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["created_by", nil], ["created_date", Fri, 17 Apr 2015 23:31:12 UTC +00:00], ["instructor_id", 1], ["is_public", false], ["json", "{\n  \"answers\": [\n    {\n      \"answer_text\": \"CRUD action, database\",\n      \"correct\": false,\n      \"explanation\": null\n    },\n    {\n      \"answer_text\": \"header, cookie\",\n      \"correct\": false,\n      \"explanation\": \"A header is part of the request, but a cookie is not necessarily included unless the server previously specified one.\"\n    },\n    {\n      \"answer_text\": \"URL, wildcard\",\n      \"correct\": false,\n      \"explanation\": \"A URL is necessary, but not a wildcard.\"\n    },\n    {\n      \"answer_text\": \"URI, HTTP request method\",\n      \"correct\": true,\n      \"explanation\": \"The URI alone isn't enough--the same URI used with two different methods can cause two different actions.\"\n    }\n  ],\n  \"points\": 1,\n  \"raw\": null,\n  \"name\": null,\n  \"question_tags\": [\n\n  ],\n  \"question_comment\": \"\",\n  \"question_text\": \"An HTTP request must consist of both a(n) ----- and a(n) -----\",\n  \"multiple\": false,\n  \"randomize\": true,\n  \"question_type\": \"MultipleChoice\"\n}"], ["last_used", nil], ["problem_type", "MultipleChoice"], ["rendered_text", nil], ["text", ""], ["updated_at", Fri, 17 Apr 2015 23:31:12 UTC +00:00]]
  [1m[35m (0.1ms)[0m  INSERT INTO "collections_problems" ("problem_id", "collection_id") VALUES (11, 4)
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 11[0m
  [1m[32mSOLR Request (4.9ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
UPLOAD IDS:
4
-------------------------------------------------
Redirected to http://www.example.com/finalize_upload?ids%5B%5D=4
  [1m[32mSOLR Request (73.6ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
Completed 302 Found in 125.4ms (ActiveRecord: 3.3ms)
Started GET "/finalize_upload?ids[]=4" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by CollectionsController#finalize_upload as HTML
  Parameters: {"ids"=>["4"]}
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" WHERE "collections"."id" = ? LIMIT 1  [["id", "4"]]
  Rendered collections/_form.html.haml (4.3ms)
  [1m[36mProblem Load (0.2ms)[0m  [1mSELECT "problems".* FROM "problems" INNER JOIN "collections_problems" ON "problems"."id" = "collections_problems"."problem_id" WHERE "collections_problems"."collection_id" = 4[0m
  [1m[35m (0.0ms)[0m  SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mUPDATE "problems" SET "rendered_text" = '
 <!-- Seed: 45112441494954901541623570037646052436 -->
<ol class="questions">
 <li id="question-0" class="question multiplechoice ">
 <div class="text">
 <p>
[1 point] Which of the following best identifies the four basic operations supported by RDBMS? </p>
 </div>
 <ol class="answers">
 <li>REST</li>
 <li>Get, Put, Post, Delete</li>
 <li>CRUD</li>
 <li>HTTP</li>
 </ol>
 </li>
</ol>


', "updated_at" = '2015-04-17 23:31:13.064511' WHERE "problems"."id" = 7[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 7
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 7[0m
  [1m[32mSOLR Request (7.3ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36m (0.1ms)[0m  [1mUPDATE "problems" SET "rendered_text" = '
 <!-- Seed: 45112441494954901541623570037646052436 -->
<ol class="questions">
 <li id="question-0" class="question multiplechoice ">
 <div class="text">
 <p>
[1 point] The implied port number of the URI <tt>http://google.com</tt> is </p>
 </div>
 <ol class="answers">
 <li>8000</li>
 <li>400</li>
 <li>3000</li>
 <li>80</li>
 </ol>
 </li>
</ol>


', "updated_at" = '2015-04-17 23:31:13.079732' WHERE "problems"."id" = 8[0m
  [1m[35mTag Load (0.0ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 8
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 8[0m
  [1m[32mSOLR Request (44.2ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36mInstructor Load (0.2ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mUPDATE "problems" SET "rendered_text" = '
 <!-- Seed: 45112441494954901541623570037646052436 -->
<ol class="questions">
 <li id="question-0" class="question selectmultiple multiple">
 <div class="text">
 <p>
[1 point] Select ALL that apply: Which tiers in the three-tier architecture are involved in handling views? </p>
 </div>
 <ol class="answers">
 <li>Database</li>
 <li>Logic</li>
 <li>Persistence</li>
 <li>Presentation</li>
 </ol>
 </li>
</ol>


', "updated_at" = '2015-04-17 23:31:13.133824' WHERE "problems"."id" = 9[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 9
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 9[0m
  [1m[32mSOLR Request (2.9ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36m (0.1ms)[0m  [1mUPDATE "problems" SET "rendered_text" = '
 <!-- Seed: 45112441494954901541623570037646052436 -->
<ol class="questions">
 <li id="question-0" class="question multiplechoice ">
 <div class="text">
 <p>
[1 point] The ----- tier of three-tier SaaS apps is the most complicated to scale. </p>
 </div>
 <ol class="answers">
 <li>Database</li>
 <li>Logic</li>
 <li>Persistence</li>
 <li>Presentation</li>
 </ol>
 </li>
</ol>


', "updated_at" = '2015-04-17 23:31:13.145008' WHERE "problems"."id" = 10[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 10
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 10[0m
  [1m[32mSOLR Request (3.0ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mUPDATE "problems" SET "rendered_text" = '
 <!-- Seed: 45112441494954901541623570037646052436 -->
<ol class="questions">
 <li id="question-0" class="question multiplechoice ">
 <div class="text">
 <p>
[1 point] An HTTP request must consist of both a(n) ----- and a(n) ----- </p>
 </div>
 <ol class="answers">
 <li>URI, HTTP request method</li>
 <li>header, cookie</li>
 <li>URL, wildcard</li>
 <li>CRUD action, database</li>
 </ol>
 </li>
</ol>


', "updated_at" = '2015-04-17 23:31:13.156609' WHERE "problems"."id" = 11[0m
  [1m[35mTag Load (0.1ms)[0m  SELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 11
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 11[0m
  [1m[32mSOLR Request (3.7ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  Rendered shared/_problems_table.html.haml (111.2ms)
  Rendered collections/finalize_upload.html.haml within layouts/application (119.8ms)
  [1m[32mSOLR Request (68.5ms)[0m  [ path=[1m[1mupdate[0m parameters={} ]
Completed 200 OK in 193.7ms (Views: 58.5ms | ActiveRecord: 3.5ms | Solr: 156.7ms)
    And I press "upload"                                                 # features/step_definitions/web_steps.rb:52
    Then I should see "Sucessfully uploaded file"                        # features/step_definitions/web_steps.rb:105
      expected to find text "Sucessfully uploaded file" in "Course Question Bank Log Out My Dashboard Welcome, Example User user! Quiz successfully uploaded! Finalize changes or discard this upload Name Description Delete this collection? trash_can_icon Export this collection: export button Question Text Collections Tags Remove from collection [1 point] Which of the following best identifies the four basic operations supported by RDBMS? REST Get, Put, Post, Delete CRUD HTTP Created Date: 2015-04-17 23:31:12 UTC | Created By: Example User A few example questions, remove from this collection [1 point] The implied port number of the URI http://google.com is 8000 400 3000 80 Created Date: 2015-04-17 23:31:12 UTC | Created By: Example User A few example questions, remove from this collection [1 point] Select ALL that apply: Which tiers in the three-tier architecture are involved in handling views? Database Logic Persistence Presentation Created Date: 2015-04-17 23:31:12 UTC | Created By: Example User A few example questions, remove from this collection [1 point] The ----- tier of three-tier SaaS apps is the most complicated to scale. Database Logic Persistence Presentation Created Date: 2015-04-17 23:31:12 UTC | Created By: Example User A few example questions, remove from this collection [1 point] An HTTP request must consist of both a(n) ----- and a(n) ----- URI, HTTP request method header, cookie URL, wildcard CRUD action, database Created Date: 2015-04-17 23:31:12 UTC | Created By: Example User A few example questions, remove from this collection" (RSpec::Expectations::ExpectationNotMetError)
      ./features/step_definitions/web_steps.rb:107:in `/^(?:|I )should see "([^\"]*)"$/'
      features/upload.feature:19:in `Then I should see "Sucessfully uploaded file"'
  [1m[35m (0.2ms)[0m  rollback transaction

  Scenario: syntax error in the file                                           # features/upload.feature:21
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.0ms)[0m  commit transaction
  [1m[36m (0.0ms)[0m  [1mbegin transaction[0m
  [1m[35mInstructor Load (0.2ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1
Started GET "/login" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#login as HTML
  Rendered sessions/login.html.haml within layouts/application (0.2ms)
Completed 200 OK in 2.3ms (Views: 2.0ms | ActiveRecord: 0.0ms | Solr: 68.5ms)
Started GET "/auth/github" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Started GET "/auth/github/callback" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by SessionsController#create as HTML
  Parameters: {"provider"=>"github"}
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."uid" = '1234' LIMIT 1[0m
Redirected to http://www.example.com/problems
Completed 302 Found in 1.4ms (ActiveRecord: 0.1ms)
Started GET "/problems" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by ProblemsController#index as HTML
  [1m[35mInstructor Load (0.0ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
  [1m[36mCollection Load (0.1ms)[0m  [1mSELECT "collections".* FROM "collections" WHERE "collections"."instructor_id" = 1[0m
  [1m[32mSOLR Request (8.1ms)[0m  [ path=[1m[1mselect[0m parameters={fq: [1m[1m["type:Problem", "(instructor_id_i:1 OR is_public_b:true)", "coll_names_sm:[* TO *]"][0m, start: [1m[1m0[0m, rows: [1m[1m30[0m, q: [1m[1m"*:*"[0m} ]
  [1m[35mProblem Load (0.2ms)[0m  SELECT "problems".* FROM "problems" WHERE "problems"."id" IN (3, 4, 5, 6, 7, 8, 9, 10, 11)
  Rendered problems/_filter.html.haml (1.4ms)
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 3
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 3[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 2 LIMIT 1[0m
  [1m[35mCollection Load (0.2ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 4
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 4[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1[0m
  [1m[35mCollection Load (0.2ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 5
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 5[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  [1m[36mCACHE (0.0ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 3 LIMIT 1[0m
  [1m[35mCollection Load (0.1ms)[0m  SELECT "collections".* FROM "collections" INNER JOIN "collections_problems" ON "collections"."id" = "collections_problems"."collection_id" WHERE "collections_problems"."problem_id" = 6
  [1m[36mTag Load (0.1ms)[0m  [1mSELECT "tags".* FROM "tags" INNER JOIN "problems_tags" ON "tags"."id" = "problems_tags"."tag_id" WHERE "problems_tags"."problem_id" = 6[0m
  [1m[35mCACHE (0.0ms)[0m  SELECT "collections".* FROM "collections" 
  Rendered shared/_problems_table.html.haml (15.2ms)
  Rendered problems/index.html.haml within layouts/application (17.1ms)
Completed 200 OK in 32.6ms (Views: 18.3ms | ActiveRecord: 1.6ms | Solr: 8.1ms)
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
  Rendered upload/index.html.haml within layouts/application (0.6ms)
Completed 200 OK in 4.2ms (Views: 3.3ms | ActiveRecord: 0.1ms | Solr: 0.0ms)
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
  Rendered upload/index.html.haml within layouts/application (0.6ms)
Completed 200 OK in 3.5ms (Views: 2.5ms | ActiveRecord: 0.1ms | Solr: 0.0ms)
    Given I am on the upload page                                              # features/step_definitions/web_steps.rb:44
    And I attach the file "features/test_files/foo_error.txt" to "file_upload" # features/step_definitions/web_steps.rb:101
Started POST "/upload" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#upload as HTML
  Parameters: {"utf8"=>"✓", "ruql_file"=>#<ActionDispatch::Http::UploadedFile:0xc172454 @original_filename="foo_error.txt", @content_type="text/plain", @headers="Content-Disposition: form-data; name=\"ruql_file\"; filename=\"foo_error.txt\"\r\nContent-Type: text/plain\r\nContent-Length: 2074\r\n", @tempfile=#<File:/tmp/RackMultipart20150417-4052-fnj4qj>>, "commit"=>"upload", ":as"=>"upload"}
  [1m[36mInstructor Load (0.1ms)[0m  [1mSELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1[0m
Redirected to http://www.example.com/upload
Completed 302 Found in 1.6ms (ActiveRecord: 0.1ms)
Started GET "/upload" for 127.0.0.1 at 2015-04-17 20:31:13 -0300
[Barista] Compiling all scripts for barista
[Barista] Compiling all coffeescripts
[Barista] Copying all javascripts
Processing by UploadController#index as HTML
  [1m[35mInstructor Load (0.1ms)[0m  SELECT "instructors".* FROM "instructors" WHERE "instructors"."id" = 1 LIMIT 1
  Rendered upload/index.html.haml within layouts/application (0.6ms)
Completed 200 OK in 3.4ms (Views: 2.5ms | ActiveRecord: 0.1ms | Solr: 0.0ms)
    And I press "upload"                                                       # features/step_definitions/web_steps.rb:52
    Then I should see "There is an error in the file"                          # features/step_definitions/web_steps.rb:105
  [1m[36m (0.0ms)[0m  [1mrollback transaction[0m

Failing Scenarios:
cucumber features/upload.feature:15 # Scenario: upload a file successfully

3 scenarios (1 failed, 2 passed)
17 steps (1 failed, 16 passed)
0m1.803s
Coverage report generated for Cucumber Features to /home/saasbook/coursequestionbank/coverage. 148 / 218 LOC (67.89%) covered.
