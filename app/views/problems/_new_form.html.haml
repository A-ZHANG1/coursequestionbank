
- previous = local_assigns[:previous] || nil
- edit = local_assigns[:edit]
- if edit
  = edit
  - source = previous.ruql_source(new = false)
- else
  - if previous.uid = "5c7327b8-6492-4fe5-931e-b4257e7561f7"
    = previous.ruql_source
  - source = @ruql_source || (previous && previous.ruql_source) || ''
- tags = (previous && previous.tags.map(&:name).join(', ')) || ''


= form_tag problems_path, :method => :post, :class => 'form-horizontal new-form', :previous => "#{previous.id}" do
  %div.form-group
    = label_tag :ruql_source, 'Source:', :class => 'col-xs-12 col-sm-2 control-label'
    %div.col-xs-12.col-sm-10
      = text_area_tag :ruql_source, source, :class => 'source_field form-control', :rows => 15, :placeholder => 'RuQL source code'

  %div.form-group
    = label_tag :tag_names, 'Tags:', :class => 'col-xs-12 col-sm-2 control-label'
    %div.col-xs-12.col-sm-10
      = text_field_tag :tag_names, nil, :id => nil, :class => 'form-control', :placeholder => 'tag 1, tag 2', :value => (tags if tags != '')

  - if !edit
    %div.form-group
      = label_tag :parent_uid, 'Parent:', :class => 'col-xs-12 col-sm-2 control-label'
      %div.col-xs-12.col-sm-10
        = text_field_tag :parent_uid, nil, :id => nil, :class => 'form-control', :placeholder => 'Parent UID', :value => (previous.uid if previous)

  %div.form-group
    = label_tag :ruql_source, 'Category:', :class => 'col-xs-12 col-sm-2 control-label'
    %div.col-xs-12.col-sm-10
      = select_tag :category, options(Problem.all_bloom_categories, previous ? previous.bloom_category : nil), :id => nil, :class => 'form-control'

  %div.form-group
    = label_tag nil, 'Collections:', :class => 'col-xs-12 col-sm-2 control-label'
    %div.col-xs-12.col-sm-10.new-problem-collections
      - Collection.accessible_by(current_ability, :manage).each do |collection|
        %div.new-problem-collection
          = check_box_tag "collections[#{collection.id}]", 1,  !!(collection.problems.include? previous), class: 'checkbox', id: "collections_#{collection.id}"
          = label_tag "collections_#{collection.id}", collection.name.truncate(35), :title => collection.name

  %div.form-group
    %div.col-sm-2
    %div.col-xs-12.col-sm-10
      = select_tag :privacy, privacy_options(previous ? previous.is_public : false), :id => nil, :class => 'form-control'

  %div.form-group
    %div.col-sm-2
    %div.col-xs-12.col-sm-10
      %p.message
      - if previous
        - if edit
          - submit_msg = 'Update'
        - else
          - submit_msg = 'Supersede question'
      - else
        - submit_msg = 'Create question'
      -# - submit_msg = previous ? (edit? 'Update' : 'Supersede question') : 'Create question'
      = submit_tag submit_msg, :class => 'btn btn-primary'

%div.form-group{:class => 'confirm-edit', :style => 'display: none'}
  %label
    You only want to update question when making minor edits.
    %br
    Large-scale edits are more suitable for creating a new question by hitting supersede.
    %br
    Are you sure you still want to continue?
  = submit_tag "Yes. Proceed!", :class => 'btn btn-default'
  %button{:type => "button", :class => "no-edit btn btn-default"}
    No. Go Back!
